Abs.apk
Soot started on Wed Apr 15 22:01:08 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.adcolony.sdk.aq: void aJ(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.l.ag: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.c.b.g: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.l.ag: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.j: void setImageUrl(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.facebook.ads.internal.l.ag: void <init>(android.widget.ImageView)>($r1)
SOURCE: 
	<com.facebook.ads.internal.view.m: void setUpContent(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.internal.mq: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.internal.lt: void QS()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.l.ao: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void qg()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.mopub.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.mopub.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.l.ag: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.l: void setNativeAd(com.facebook.ads.o)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.l.ag: void <init>(android.widget.ImageView)>($r4)
SOURCE: 
	<com.facebook.ads.internal.view.b.d: void d(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:01:48 EDT 2020
Soot has run for 0 min. 40 sec.
==========================(Potential Leaks)==============================


AccuWeather.apk
Soot started on Wed Apr 15 22:02:27 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView$a: void <init>(com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView,com.bosch.myspin.serversdk.uielements.MySpinKeyboardButton)>($r0, $r1)
SOURCE: 
	<com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView: void a(com.bosch.myspin.serversdk.uielements.MySpinKeyboardButton)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.util.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.util.q: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzalg: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzakk: void zzra()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.obf.hf$1: void <init>(com.google.obf.hf)>($r0)
SOURCE: 
	<com.google.obf.hf: void a()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:03:14 EDT 2020
Soot has run for 0 min. 46 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: android.app.Activity a>
SOURCE: 
	<com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: void setActivity(android.app.Activity)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.appsflyer.MultipleInstallBroadcastReceiver dummyMainMethod_com_appsflyer_MultipleInstallBroadcastReceiver(android.content.Intent)>
	2: <com.appsflyer.MultipleInstallBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
	3: <com.smartdevicelink.transport.SdlRouterService$2: void onReceive(android.content.Context,android.content.Intent)>
	4: <com.bosch.myspin.serversdk.x$a$1: void run()>
	5: <com.bosch.myspin.serversdk.x: void c(com.bosch.myspin.serversdk.x)>
	6: <com.bosch.myspin.serversdk.x: void e()>
	7: <com.bosch.myspin.serversdk.y: void e()>
	8: <com.bosch.myspin.serversdk.y: void y()>
	9: <com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: void setActivity(android.app.Activity)>


Adobe Acrobat.apk
Soot started on Wed Apr 15 22:03:52 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.adobe.reader.services.cpdf.ARFetchUsersSubscriptionsAsyncTask: void <init>(android.content.Context,boolean,com.adobe.libs.services.cpdf.SVFetchUsersSubscriptionsAsyncTask$FetchUsersSubscriptionStatusCompletionHandler)>($r0, $z0, $r2)
SOURCE: 
	<com.adobe.reader.services.ARUserAccountsActivity: void loadMyAccountsView()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<net.hockeyapp.android.tasks.GetFileSizeTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r14, $r15)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void configureView()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.DownloadFileTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void createDownloadTask(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.adobe.reader.services.blueheron.ARBlueHeronMoveCacheAsyncTask: void <init>(android.content.Context,boolean,long,com.adobe.reader.services.blueheron.ARBlueHeronMoveCacheAsyncTask$MoveCacheTaskHandler)>($r0, 1, $l1, $r14)
SOURCE: 
	<com.adobe.reader.viewer.ARViewerActivity: void enterDocumentViewing(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.reader.filebrowser.ARFileEntry$DOCUMENT_SOURCE,boolean,android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.adobe.reader.services.blueheron.ARBlueHeronUpdateLastViewedPageIndexAsyncTask: void <init>(java.lang.String,int)>($r3, $i0)
SOURCE: 
	<com.adobe.reader.viewer.ARViewerActivity: void onDocMovedToCloudSuccess(com.adobe.reader.filebrowser.ARFileEntry$DOCUMENT_SOURCE,java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.adobe.reader.viewer.ARViewerActivity$ClearPreviousPositionTask: void <init>(com.adobe.reader.viewer.ARViewerActivity,com.adobe.reader.viewer.ARViewerActivity$1)>($r0, null)
SOURCE: 
	<com.adobe.reader.viewer.ARViewerActivity: void resetTimer()>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Adobe+Acrobat.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Amazon Kindle.apk
Soot started on Wed Apr 15 22:04:12 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.amazon.kcp.debug.DebugActivity$55: void <init>(com.amazon.kcp.debug.DebugActivity,java.util.List,com.amazon.kindle.annotationconversion.ContentIdentifier,com.amazon.kindle.annotationconversion.ContentIdentifier)>($r0, $r4, $r5, $r6)
SOURCE: 
	<com.amazon.kcp.debug.DebugActivity: void onConvertAnnotation(android.view.View)>
Soot has run out of the memory allocated to it by the Java VM.
To allocate more memory to Soot, use the -Xmx switch to Java.
For example (for 2GB): java -Xmx2g soot.Main ...
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3689)
	at java.base/java.util.ArrayList.grow(ArrayList.java:237)
	at java.base/java.util.ArrayList.grow(ArrayList.java:242)
	at java.base/java.util.ArrayList.add(ArrayList.java:485)
	at java.base/java.util.ArrayList.add(ArrayList.java:498)
	at com.guitard0g.dataflow_analysis.PathBuilder.<init>(App.java:285)
	at com.guitard0g.dataflow_analysis.App.getMethodPath(App.java:146)
	at com.guitard0g.dataflow_analysis.Instrument.caseInvokeAsyncTask(Instrument.java:121)
	at com.guitard0g.dataflow_analysis.Instrument$2.caseInvokeStmt(Instrument.java:94)
	at soot.jimple.internal.JInvokeStmt.apply(JInvokeStmt.java:91)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:92)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Autolist.apk
Soot started on Wed Apr 15 22:09:47 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.google.firebase.auth.internal.FederatedSignInActivity$a: void <init>(com.google.android.gms.internal.zzdyy,com.google.firebase.auth.internal.FederatedSignInActivity)>($r6, $r0)
SOURCE: 
	<com.google.firebase.auth.internal.FederatedSignInActivity: void onNewIntent(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.internal.lg: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.internal.kj: void f()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:10:17 EDT 2020
Soot has run for 0 min. 29 sec.
==========================(Potential Leaks)==============================


AutoScout24.apk
Soot started on Wed Apr 15 22:10:50 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.k.r: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
PATH TO SOURCE METHOD: 
	0: <com.squareup.haha.perflib.Main: void main(java.lang.String[])>
	1: <com.squareup.haha.perflib.Main: void testClassesQuery(com.squareup.haha.perflib.Snapshot)>
	2: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	3: <com.autoscout24.detailpage.gallery.ad.AdWidgetProvider$1: java.lang.Object invoke(java.lang.Object)>
	4: <com.autoscout24.detailpage.gallery.ad.AdWidgetProvider$1: void a(com.autoscout24.detailpage.gallery.ad.AdMediaItem)>
	5: <com.autoscout24.business.manager.impl.AdManagerImpl: void a(android.content.Context,com.autoscout24.core.ads.AdInfo,android.widget.RelativeLayout,java.util.Map,java.lang.String)>
	6: <com.autoscout24.business.manager.impl.ads.AbstractAdConfig: void a(com.autoscout24.core.ads.AdInfo,android.widget.RelativeLayout,java.util.Map,java.lang.String,com.autoscout24.business.manager.impl.ads.AbstractAdConfig)>
	7: <com.autoscout24.business.manager.impl.ads.FacebookAdConfig: android.view.View a(com.autoscout24.core.ads.AdInfo,android.widget.RelativeLayout)>
	8: <com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.comscore.streaming.m: void <init>(com.comscore.streaming.StreamSenseVideoView,long,java.util.HashMap)>($r0, $l0, $r1)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
PATH TO SOURCE METHOD: 
	0: <com.squareup.haha.perflib.Main: void main(java.lang.String[])>
	1: <com.squareup.haha.perflib.Main: void testClassesQuery(com.squareup.haha.perflib.Snapshot)>
	2: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	3: <com.autoscout24.detailpage.compare.CompareVehicleHelperImpl$loadDetailDataInBackground$2: java.lang.Object invoke(java.lang.Object)>
	4: <com.autoscout24.detailpage.compare.CompareVehicleHelperImpl$loadDetailDataInBackground$2: void a(java.lang.Throwable)>
	5: <com.autoscout24.core.utils.logging.HockeyAppReporter: void a(java.lang.Throwable)>
	6: <com.comscore.streaming.m: void run()>
	7: <com.comscore.streaming.StreamSenseVideoView: void a(com.comscore.streaming.StreamSenseVideoView,java.util.HashMap)>
	8: <com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.comscore.streaming.n: void <init>(com.comscore.streaming.StreamSenseVideoView,long)>($r0, $l0)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void g()>
PATH TO SOURCE METHOD: 
	0: <com.squareup.haha.perflib.Main: void main(java.lang.String[])>
	1: <com.squareup.haha.perflib.Main: void testClassesQuery(com.squareup.haha.perflib.Snapshot)>
	2: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	3: <com.autoscout24.detailpage.compare.CompareVehicleHelperImpl$loadDetailDataInBackground$2: java.lang.Object invoke(java.lang.Object)>
	4: <com.autoscout24.detailpage.compare.CompareVehicleHelperImpl$loadDetailDataInBackground$2: void a(java.lang.Throwable)>
	5: <com.autoscout24.core.utils.logging.HockeyAppReporter: void a(java.lang.Throwable)>
	6: <com.comscore.streaming.n: void run()>
	7: <com.comscore.streaming.StreamSenseVideoView: void d(com.comscore.streaming.StreamSenseVideoView)>
	8: <com.comscore.streaming.StreamSenseVideoView: void g()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void f()>
Soot has run out of the memory allocated to it by the Java VM.
To allocate more memory to Soot, use the -Xmx switch to Java.
For example (for 2GB): java -Xmx2g soot.Main ...
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3689)
	at java.base/java.util.ArrayList.grow(ArrayList.java:237)
	at java.base/java.util.ArrayList.grow(ArrayList.java:242)
	at java.base/java.util.ArrayList.add(ArrayList.java:485)
	at java.base/java.util.ArrayList.add(ArrayList.java:498)
	at com.guitard0g.dataflow_analysis.PathBuilder.<init>(App.java:285)
	at com.guitard0g.dataflow_analysis.App.getMethodPath(App.java:146)
	at com.guitard0g.dataflow_analysis.Instrument.caseInvokeAsyncTask(Instrument.java:121)
	at com.guitard0g.dataflow_analysis.Instrument$2.caseInvokeStmt(Instrument.java:95)
	at soot.jimple.internal.JInvokeStmt.apply(JInvokeStmt.java:91)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:92)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Best Hairstyles.apk
Soot started on Wed Apr 15 22:13:52 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzanl: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzamp: void zzj()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:14:14 EDT 2020
Soot has run for 0 min. 21 sec.
==========================(Potential Leaks)==============================


CNN.apk
Soot started on Wed Apr 15 22:14:31 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$CountDownTimer: void <init>(com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView,com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$1)>($r0, null)
SOURCE: 
	<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView: void setNotification(com.apptentive.android.sdk.module.messagecenter.model.ApptentiveToastNotification)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView$1: void <init>(com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView: void fetchImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.cnn.mobile.android.phone.features.main.MainActivity: void p()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.cnn.mobile.android.phone.features.watch.authentication.legacy.TvePickerPrimaryListActivity$4: void <init>(com.cnn.mobile.android.phone.features.watch.authentication.legacy.TvePickerPrimaryListActivity)>($r0)
SOURCE: 
	<com.cnn.mobile.android.phone.features.watch.authentication.legacy.TvePickerPrimaryListActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.cnn.mobile.android.phone.features.watch.authentication.legacy.TvePickerPrimaryListActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.comscore.streaming.m: void <init>(com.comscore.streaming.StreamSenseVideoView,long,java.util.HashMap)>($r0, $l0, $r1)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.comscore.streaming.n: void <init>(com.comscore.streaming.StreamSenseVideoView,long)>($r0, $l0)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void g()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.q: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.x: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.vr.ndk.base.GvrSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<com.google.vr.ndk.base.GvrSurfaceView: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.google.vr.ndk.base.GvrSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r9)
SOURCE: 
	<com.google.vr.ndk.base.GvrSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.cnn.mobile.android.phone.view.NewsCustomVideoView: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<i.a.c.a.h$b: void <init>(i.a.c.a.h,i.a.c.a.h$1)>($r0, null)
SOURCE: 
	<i.a.c.a.h: void a(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.outbrain.OBSDK.Viewability.a: void <init>(android.view.View,long)>($r0, $l0)
SOURCE: 
	<com.outbrain.OBSDK.Viewability.OBTextView: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.sharethrough.sdk.AdViewTimerTask: void <init>(com.sharethrough.sdk.IAdView,int,com.sharethrough.sdk.Creative,com.sharethrough.sdk.BeaconService,com.sharethrough.sdk.Provider)>($r5, $i0, $r1, $r6, $r2)
SOURCE: 
	<com.sharethrough.sdk.a: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<i.a.c.d.b: void a(java.lang.String,int)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:15:11 EDT 2020
Soot has run for 0 min. 39 sec.
==========================(Potential Leaks)==============================


Crackle.apk
Soot started on Wed Apr 15 22:15:56 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.libraries.cast.companionlibrary.widgets.MiniController$7: void <init>(com.google.android.libraries.cast.companionlibrary.widgets.MiniController)>($r0)
SOURCE: 
	<com.google.android.libraries.cast.companionlibrary.widgets.MiniController: void setUpcomingIcon(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.libraries.cast.companionlibrary.widgets.MiniController$6: void <init>(com.google.android.libraries.cast.companionlibrary.widgets.MiniController)>($r0)
SOURCE: 
	<com.google.android.libraries.cast.companionlibrary.widgets.MiniController: void setIcon(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.comscore.streaming.k: void <init>(com.comscore.streaming.StreamSenseVideoView,long,java.util.HashMap)>($r0, $l0, $r1)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.comscore.streaming.l: void <init>(com.comscore.streaming.StreamSenseVideoView,long)>($r0, $l0)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void g()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.aa: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.f: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<tv.freewheel.renderers.temporal.VideoAdView: void tryToGetRedirectedUrl(java.lang.String,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<tv.freewheel.renderers.html.MRAIDWebView$downloadHTMLContentTask: void <init>(tv.freewheel.renderers.html.MRAIDWebView,tv.freewheel.renderers.html.MRAIDWebView$1)>($r0, null)
SOURCE: 
	<tv.freewheel.renderers.html.MRAIDWebView: void loadCreativeWithScript(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:16:34 EDT 2020
Soot has run for 0 min. 37 sec.
==========================(Potential Leaks)==============================


Duolingo.apk
Soot started on Wed Apr 15 22:17:01 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Duolingo.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


ES File Explorer.apk
Soot started on Wed Apr 15 22:17:34 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.durtb.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.durtb.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10)
SOURCE: 
	<com.estrongs.android.pop.app.FileChooserActivity: void b(com.estrongs.fs.h)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.duapps.scene.k: void <init>(com.duapps.scene.LandingPageActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.duapps.scene.LandingPageActivity: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.duapps.scene.LandingPageActivity: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.duapps.scene.LandingPageActivity: void j()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.facebook.ads.internal.util.p: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.estrongs.android.pop.app.PopAudioPlayer: java.lang.String[] a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.estrongs.android.pop.app.PopAudioPlayer: void l()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r20.<com.estrongs.android.pop.app.gv: void <init>(com.estrongs.android.pop.app.PopAudioPlayer,com.estrongs.android.pop.app.d.m)>($r0, $r18)
SOURCE: 
	<com.estrongs.android.pop.app.PopAudioPlayer: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r21.<com.estrongs.android.pop.app.gw: void <init>(com.estrongs.android.pop.app.PopAudioPlayer,com.estrongs.android.pop.app.d.m)>($r0, $r18)
SOURCE: 
	<com.estrongs.android.pop.app.PopAudioPlayer: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.estrongs.android.pop.view.by: void <init>(com.estrongs.android.pop.view.FileExplorerActivity,com.estrongs.fs.d,java.lang.String,boolean,java.lang.String)>($r0, $r3, $r1, $z0, $r2)
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: boolean a(java.lang.String,java.lang.String,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: void aL()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.estrongs.android.pop.view.an: void <init>(com.estrongs.android.pop.view.FileExplorerActivity,boolean)>($r0, $z0)
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: void aO()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: void a(boolean,android.os.Handler,java.lang.Runnable)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r16.<com.estrongs.android.pop.view.cq: void <init>(com.estrongs.android.pop.view.FileExplorerActivity,com.estrongs.android.pop.app.service.b)>($r0, $r8)
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: boolean a(java.util.ArrayList)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r15, "Synchronize Files")
SOURCE: 
	<com.estrongs.android.pop.view.FileExplorerActivity: void ac()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.estrongs.android.pop.app.nz: void <init>(com.estrongs.android.pop.app.UninstallMonitorActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.estrongs.android.pop.app.UninstallMonitorActivity: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.estrongs.android.pop.app.dr: void <init>(com.estrongs.android.pop.app.ImageCommentActivity,java.lang.String,boolean)>($r0, "Comment Loader", $z0)
SOURCE: 
	<com.estrongs.android.pop.app.ImageCommentActivity: void a(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.estrongs.android.pop.app.do: void <init>(com.estrongs.android.pop.app.ImageCommentActivity,java.lang.String)>($r0, "Comment Refresher")
SOURCE: 
	<com.estrongs.android.pop.app.ImageCommentActivity: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.estrongs.android.ui.view.u: void <init>(com.estrongs.android.ui.view.CreateOAuthNetDisk)>($r0)
SOURCE: 
	<com.estrongs.android.ui.view.CreateOAuthNetDisk: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+ES+File+Explorer.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Evernote.apk
Soot started on Wed Apr 15 22:18:20 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.evernote.ui.ContractNoUiActivity$5: void <init>(com.evernote.ui.ContractNoUiActivity,android.support.v4.app.Fragment,long,int,java.util.concurrent.Callable)>($r0, $r4, $l0, $i1, $r2)
SOURCE: 
	<com.evernote.ui.ContractNoUiActivity: void a(java.util.concurrent.Executor,java.util.concurrent.Callable,long,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.evernote.messaging.ui.RecipientField$3: void <init>(com.evernote.messaging.ui.RecipientField)>($r0)
SOURCE: 
	<com.evernote.messaging.ui.RecipientField: void b(android.content.Context)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.evernote.note.composer.richtext.RichTextComposerCe$22: void <init>(com.evernote.note.composer.richtext.RichTextComposerCe,java.lang.String,com.evernote.util.function.Consumer)>($r0, $r1, $r2)
SOURCE: 
	<com.evernote.note.composer.richtext.RichTextComposerCe: void a(java.lang.String,com.evernote.util.function.Consumer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.messaging.UpdateParticipantsAsyncTask: void <init>(com.evernote.client.Account,long,com.evernote.asynctask.IAsyncTaskResult)>($r3, $l0, $r0)
SOURCE: 
	<com.evernote.messaging.AddParticipantActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.AutoSavingNoteActivity: void p()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.evernote.note.composer.richtext.RichTextComposerNative: void setRichText(java.lang.CharSequence,java.util.Map,com.evernote.note.composer.draft.MetaInfo,com.evernote.note.composer.richtext.RichTextComposer$SetRichTextCallback)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.pdf.tasks.PDFImageLoadTask: void <init>(com.evernote.pdf.views.PDFThumbnailView,com.evernote.pdf.PDFProducer,int)>($r0, $r1, $i0)
SOURCE: 
	<com.evernote.pdf.views.PDFThumbnailView: void b(com.evernote.pdf.PDFProducer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.evernote.billing.LaunchBillingActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.evernote.ui.EvernotePreferenceActivity$2: void <init>(com.evernote.ui.EvernotePreferenceActivity)>($r0)
SOURCE: 
	<com.evernote.ui.EvernotePreferenceActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.cardscan.CardscanBizCardView$8: void <init>(com.evernote.cardscan.CardscanBizCardView,java.lang.String,java.io.File,java.lang.String)>($r0, $r1, $r2, $r3)
SOURCE: 
	<com.evernote.cardscan.CardscanBizCardView: void a(java.lang.String,java.io.File,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.messages.RatingsFullscreenDialogActivity: void d()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.evernote.android.multishotcamera.magic.ui.AutoCaptureFrame$RenderingThread: void <init>(com.evernote.android.multishotcamera.magic.ui.AutoCaptureFrame)>($r0)
SOURCE: 
	<com.evernote.android.multishotcamera.magic.ui.AutoCaptureFrame: void startRenderThread()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15)
SOURCE: 
	<com.evernote.ui.EmailActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.evernote.note.composer.richtext.RichTextComposer$4: void <init>(com.evernote.note.composer.richtext.RichTextComposer,com.evernote.note.composer.Attachment,java.lang.String[],java.lang.String[],java.lang.Runnable)>($r0, $r1, $r2, $r3, $r4)
SOURCE: 
	<com.evernote.note.composer.richtext.RichTextComposer: void a(com.evernote.note.composer.Attachment,java.lang.String[],java.lang.String[],java.lang.Runnable)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r7)
SOURCE: 
	<com.evernote.note.composer.richtext.RichTextComposer: boolean a(com.evernote.eninkcontrol.IPageViewControllerOwner$ReasonToClose)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.note.composer.richtext.RichTextComposer$5: void <init>(com.evernote.note.composer.richtext.RichTextComposer,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.evernote.note.composer.richtext.RichTextComposer: void b(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.evernote.ui.ContentClassAppLaunchActivity$4: void <init>(com.evernote.ui.ContentClassAppLaunchActivity,android.app.Activity)>($r0, $r0)
SOURCE: 
	<com.evernote.ui.ContentClassAppLaunchActivity: void <init>()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.evernote.ui.ContentClassAppLaunchActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.evernote.ui.ContentClassAppLaunchActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.evernote.android.camera.ui.AutoFitTextureView$SendExceptionToHockeyAppThread: void <init>(java.lang.Throwable,java.lang.Class,byte)>($r1, $r4, 0)
SOURCE: 
	<com.evernote.android.camera.ui.AutoFitTextureView: void handleThrowable(java.lang.Throwable)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.evernote.android.camera.ui.AutoFitTextureView$OrientationListenerThread: void <init>(android.content.Context)>($r2)
SOURCE: 
	<com.evernote.android.camera.ui.AutoFitTextureView: void startOrientationListenerThread()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.BusinessLibraryActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.evernote.ui.BusinessLibraryActivity: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.ui.BusinessLibraryActivity$2: void <init>(com.evernote.ui.BusinessLibraryActivity,java.lang.String,boolean)>($r0, $r1, $z0)
SOURCE: 
	<com.evernote.ui.BusinessLibraryActivity: void a(java.lang.String,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable)>($r11)
SOURCE: 
	<com.evernote.ui.ContextActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.evernote.messages.EmailConfirmActivity$6: void <init>(com.evernote.messages.EmailConfirmActivity,boolean)>($r0, 1)
SOURCE: 
	<com.evernote.messages.EmailConfirmActivity: void a(boolean,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.evernote.messages.EmailConfirmActivity$5: void <init>(com.evernote.messages.EmailConfirmActivity)>($r0)
SOURCE: 
	<com.evernote.messages.EmailConfirmActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.messages.WorkChatLoadingActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.evernote.messages.WorkChatLoadingActivity$3: void <init>(com.evernote.messages.WorkChatLoadingActivity)>($r0)
SOURCE: 
	<com.evernote.messages.WorkChatLoadingActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.widget.Widget4x2SettingsActivity$24: void <init>(com.evernote.widget.Widget4x2SettingsActivity,java.lang.String,int)>($r0, $r1, $i0)
SOURCE: 
	<com.evernote.widget.Widget4x2SettingsActivity: void a(int,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.evernote.ui.landing.ClaimContactActivity$4: void <init>(com.evernote.ui.landing.ClaimContactActivity,java.lang.String,com.evernote.ui.landing.ClaimContactActivity$ResultCallback)>($r0, $r1, $r2)
SOURCE: 
	<com.evernote.ui.landing.ClaimContactActivity: void b(java.lang.String,com.evernote.ui.landing.ClaimContactActivity$ResultCallback)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.ui.landing.ClaimContactActivity$5: void <init>(com.evernote.ui.landing.ClaimContactActivity,java.lang.String,com.evernote.ui.landing.ClaimContactActivity$ResultCallback)>($r0, $r1, $r2)
SOURCE: 
	<com.evernote.ui.landing.ClaimContactActivity: void a(java.lang.String,com.evernote.ui.landing.ClaimContactActivity$ResultCallback)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.evernote.ui.ShareDialogActivity$1: void <init>(com.evernote.ui.ShareDialogActivity)>($r0)
SOURCE: 
	<com.evernote.ui.ShareDialogActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.ui.ShareDialogActivity$2: void <init>(com.evernote.ui.ShareDialogActivity,java.lang.String,java.lang.String,java.lang.String)>($r0, $r4, $r8, $r9)
SOURCE: 
	<com.evernote.ui.ShareDialogActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.evernote.ui.SmartNotebookSettingsActivity$6: void <init>(com.evernote.ui.SmartNotebookSettingsActivity,java.lang.String[],java.lang.String[],int)>($r0, $r1, $r2, $i0)
SOURCE: 
	<com.evernote.ui.SmartNotebookSettingsActivity: void a(java.lang.String[],java.lang.String[],int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.evernote.ui.SmartNotebookSettingsActivity$7: void <init>(com.evernote.ui.SmartNotebookSettingsActivity)>($r0)
SOURCE: 
	<com.evernote.ui.SmartNotebookSettingsActivity: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishActivity: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5)
SOURCE: 
	<com.evernote.ui.SSOLegacyWebActivity: boolean a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r17.<java.lang.Thread: void <init>(java.lang.Runnable)>($r18)
SOURCE: 
	<com.evernote.ui.UserSetupActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.WebActivity: void a(int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5)
SOURCE: 
	<com.evernote.ui.WebActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r33.<java.lang.Thread: void <init>(java.lang.Runnable)>($r34)
SOURCE: 
	<com.evernote.ui.WebActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r33.<java.lang.Thread: void <init>(java.lang.Runnable)>($r35)
SOURCE: 
	<com.evernote.ui.WebActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r33.<java.lang.Thread: void <init>(java.lang.Runnable)>($r37)
SOURCE: 
	<com.evernote.ui.WebActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.ui.PostItSettingsActivity$5: void <init>(com.evernote.ui.PostItSettingsActivity)>($r0)
SOURCE: 
	<com.evernote.ui.PostItSettingsActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishedActivity: void b(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishedActivity: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishedActivity: void i()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishedActivity: void a(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.evernote.ui.notebook.NotebookPublishedActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.evernote.ui.helper.URIBrokerActivity$2: void <init>(com.evernote.ui.helper.URIBrokerActivity,android.content.Intent,android.content.Intent)>($r0, $r1, $r1)
SOURCE: 
	<com.evernote.ui.helper.URIBrokerActivity: void b(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.evernote.ui.notebook.NotebookShareActivity: void m()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.evernote.ui.notebook.NotebookShareActivity: void o()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)
SOURCE: 
	<com.evernote.ui.notebook.NotebookShareActivity: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.evernote.ui.notebook.NotebookShareActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.evernote.ui.tiers.TierSuccessConfirmationActivity: void b(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15)
SOURCE: 
	<com.evernote.ui.ReferAFriendActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.evernote.markup.tasks.CreateArchiveImageTask: void <init>(android.content.Context,android.graphics.Bitmap,com.evernote.skitchkit.models.SkitchDomDocument,com.evernote.markup.resources.EvernoteResourceInformation,com.evernote.skitchkit.graphics.SkitchDomAdjustedMatrix,android.net.Uri)>($r0, $r4, $r1, $r2, $r11, $r8)
SOURCE: 
	<com.evernote.ui.markup.ImageMarkupActivity: void q()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.evernote.markup.tasks.DeleteUnneededFoldersTask: void <init>(android.content.Context)>($r0)
SOURCE: 
	<com.evernote.ui.markup.ImageMarkupActivity: void w()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4)
SOURCE: 
	<com.evernote.ui.NotebookPickerActivity: void a(java.lang.String,boolean,boolean,java.lang.String,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.ui.NotebookPickerActivity$10: void <init>(com.evernote.ui.NotebookPickerActivity,java.lang.String,boolean)>($r0, $r1, $z0)
SOURCE: 
	<com.evernote.ui.NotebookPickerActivity: void b(java.lang.String,boolean,boolean,java.lang.String,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.evernote.ui.SimpleTagSelectionActivity$TagsTask: void <init>(com.evernote.ui.SimpleTagSelectionActivity)>($r0)
SOURCE: 
	<com.evernote.ui.SimpleTagSelectionActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.evernote.ui.landing.LandingActivityV7$19: void <init>(com.evernote.ui.landing.LandingActivityV7,java.lang.String,android.content.Intent,com.evernote.ui.landing.LandingActivityV7$OnGoogleVerifyCallback,com.google.android.gms.auth.api.signin.GoogleSignInAccount)>($r0, $r3, $r1, $r4, $r2)
SOURCE: 
	<com.evernote.ui.landing.LandingActivityV7: void a(android.content.Intent,com.google.android.gms.auth.api.signin.GoogleSignInAccount,java.lang.String,com.evernote.ui.landing.LandingActivityV7$OnGoogleVerifyCallback)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.evernote.markup.tasks.CreateRichPDFTask: void <init>(android.content.Context,android.net.Uri,java.io.File,com.evernote.skitchkit.models.SkitchMultipageDomDocument,boolean,java.lang.String)>($r0, $r7, $r8, $r3, $z0, $r11)
SOURCE: 
	<com.evernote.ui.markup.MarkupPDFActivity: void C()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.evernote.ui.TestPreferenceActivity$12: void <init>(com.evernote.client.Account,android.content.Context)>($r0, $r2)
SOURCE: 
	<com.evernote.ui.TestPreferenceActivity: void a(com.evernote.client.Account,int,java.io.File,android.content.Context)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.evernote.ui.TestPreferenceActivity$5: void <init>(com.evernote.ui.TestPreferenceActivity,int,int)>($r0, $i0, $i1)
SOURCE: 
	<com.evernote.ui.TestPreferenceActivity: void a(java.lang.Object)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.evernote.ui.TestPreferenceActivity: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)
SOURCE: 
	<com.evernote.ui.TestPreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.evernote.ui.landing.LandingActivity$4: void <init>(com.evernote.ui.landing.LandingActivity)>($r0)
SOURCE: 
	<com.evernote.ui.landing.LandingActivity: void f(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<android.os.HandlerThread: void <init>(java.lang.String)>("landing-activity")
SOURCE: 
	<com.evernote.ui.landing.LandingActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:19:11 EDT 2020
Soot has run for 0 min. 51 sec.
==========================(Potential Leaks)==============================


Excel.apk
Soot started on Wed Apr 15 22:20:58 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.microsoft.office.docsui.panes.SyncStatusPane$3: void <init>(com.microsoft.office.docsui.panes.SyncStatusPane)>($r0)
SOURCE: 
	<com.microsoft.office.docsui.panes.SyncStatusPane: void loadDocumentErrorsAync()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.microsoft.office.lensactivitycore.cj: void <init>(com.microsoft.office.lensactivitycore.OfficeLensActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r4, $r7)
SOURCE: 
	<com.microsoft.office.lensactivitycore.OfficeLensActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.microsoft.office.lensactivitycore.da: void <init>(com.microsoft.office.lensactivitycore.ProcessActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r6, $r3)
SOURCE: 
	<com.microsoft.office.lensactivitycore.ProcessActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.microsoft.office.docsui.panes.SyncStatusPanePhone$3: void <init>(com.microsoft.office.docsui.panes.SyncStatusPanePhone)>($r0)
SOURCE: 
	<com.microsoft.office.docsui.panes.SyncStatusPanePhone: void loadDocumentErrorsAync()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.aa: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.a: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.l: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.listeners.a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.tasks.o: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.p: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.q: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.r: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.e: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:21:34 EDT 2020
Soot has run for 0 min. 36 sec.
==========================(Potential Leaks)==============================


Facebook.apk
Soot started on Wed Apr 15 22:22:00 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<X.01k: void <init>(X.01e,java.lang.String)>($r0, "AsyncView")
SOURCE: 
	<X.01e: void surfaceCreated(android.view.SurfaceHolder)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:22:14 EDT 2020
Soot has run for 0 min. 14 sec.
==========================(Potential Leaks)==============================


Filters For Selfie.apk
Soot started on Wed Apr 15 22:22:24 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.photo.collage.musically.grid.collage.CustomPhotoGalleryActivity$2: void <init>(com.photo.collage.musically.grid.collage.CustomPhotoGalleryActivity,int,android.widget.ImageView)>($r0, $i0, $r1)
SOURCE: 
	<com.photo.collage.musically.grid.collage.CustomPhotoGalleryActivity: void a(android.widget.ImageView,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.aa: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.f: void h()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:22:43 EDT 2020
Soot has run for 0 min. 19 sec.
==========================(Potential Leaks)==============================


Flipboard.apk
Soot started on Wed Apr 15 22:23:04 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.PaintActivity$2: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<net.hockeyapp.android.d.d: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.b.a)>($r0, $r3, $r4)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r24.<net.hockeyapp.android.d.e: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.b.a)>($r0, $r16, $r25)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.facebook.ads.internal.m.ae: void <init>(com.facebook.ads.internal.view.d)>($r3)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.j)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<flipboard.activities.AudioPlayerActivity$5: void <init>(flipboard.activities.AudioPlayerActivity)>($r0)
SOURCE: 
	<flipboard.activities.AudioPlayerActivity: void E()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.d.f: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void a(net.hockeyapp.android.LoginActivity)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.m.ae: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.c.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<flipboard.gui.FLSearchView$4: void <init>(flipboard.gui.FLSearchView)>($r0)
SOURCE: 
	<flipboard.gui.FLSearchView: void i()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.c$1: void <init>(net.hockeyapp.android.views.c)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.c: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.a$1: void <init>(net.hockeyapp.android.views.a)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.a: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String,int)>("telescope", 10)
SOURCE: 
	<com.mattprecious.telescope.e: android.os.Handler getBackgroundHandler()>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Flipboard.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Floor Plan Creator.apk
Soot started on Wed Apr 15 22:23:27 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.z: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.e: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.ml.planik.android.activity.list.c: void <init>(android.app.Activity,com.ml.planik.android.n$b)>($r0, $r3)
SOURCE: 
	<com.ml.planik.android.activity.list.ListActivity: void d(long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.ml.planik.android.activity.list.l: void <init>(android.app.Activity)>($r0)
SOURCE: 
	<com.ml.planik.android.activity.list.ListActivity: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.ml.planik.android.HelpActivity$a: void <init>(com.ml.planik.android.HelpActivity)>($r0)
SOURCE: 
	<com.ml.planik.android.HelpActivity: boolean a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.ml.planik.android.HelpActivity$a: void <init>(com.ml.planik.android.HelpActivity)>($r0)
SOURCE: 
	<com.ml.planik.android.HelpActivity: boolean a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.ml.planik.android.activity.list.ImportActivity$a: void <init>(com.ml.planik.android.activity.list.ImportActivity,com.ml.planik.android.activity.list.ImportActivity$1)>($r0, null)
SOURCE: 
	<com.ml.planik.android.activity.list.ImportActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.ml.planik.android.activity.plan.b: void <init>(android.net.Uri,android.app.Activity)>($r5, $r0)
SOURCE: 
	<com.ml.planik.android.activity.plan.PlanMieszkaniaActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:23:46 EDT 2020
Soot has run for 0 min. 19 sec.
==========================(Potential Leaks)==============================


Fox News.apk
Soot started on Wed Apr 15 22:24:10 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.akamai.media.VideoPlayerViewHardwareAdvanced$MainPlaylistLoader: void <init>(com.akamai.media.VideoPlayerViewHardwareAdvanced,com.akamai.media.VideoPlayerViewHardwareAdvanced)>($r0, $r0)
SOURCE: 
	<com.akamai.media.VideoPlayerViewHardwareAdvanced: void playInternal(int,int,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<java.lang.Thread: void <init>(java.lang.Runnable)>($r14)
SOURCE: 
	<com.akamai.media.VideoPlayerViewHardwareAdvanced: boolean processBuffer(java.lang.String,byte[],int,boolean,boolean,int,int,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r21.<com.akamai.media.VideoPlayerViewHardwareAdvanced$3: void <init>(com.akamai.media.VideoPlayerViewHardwareAdvanced,boolean,java.lang.String)>($r0, $z1, $r1)
SOURCE: 
	<com.akamai.media.VideoPlayerViewHardwareAdvanced: boolean processBuffer(java.lang.String,byte[],int,boolean,boolean,int,int,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.akamai.media.VideoPlayerViewHardwareAdvanced: void seek(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.akamai.poster.Poster$AsyncImageLoadeTask: void <init>(com.akamai.poster.Poster,android.widget.ImageView,com.akamai.poster.Poster$1)>($r1, $r3, null)
SOURCE: 
	<com.akamai.poster.Poster: void loadPoster(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.akamai.media.VideoPlayerView$2: void <init>(com.akamai.media.VideoPlayerView)>($r0)
SOURCE: 
	<com.akamai.media.VideoPlayerView: void loadServerParameters()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.akamai.media.VideoPlayerView$3: void <init>(com.akamai.media.VideoPlayerView)>($r0)
SOURCE: 
	<com.akamai.media.VideoPlayerView: void postDebugData()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.outbrain.OBSDK.Viewability.ViewTimerTask: void <init>(android.view.View,long)>($r0, $l1)
SOURCE: 
	<com.outbrain.OBSDK.Viewability.OBTextView: void scheduleViewTimerTask()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.akamai.config.AMPConfigLoader: void <init>(com.akamai.config.AMPConfigLoader$ConfigLoaderListener)>($r2)
SOURCE: 
	<com.akamai.media.VideoPlayerContainer: void setFeedDataFromConfig()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.akamai.media.elements.AMPFeedLoader: void <init>(com.akamai.media.elements.AMPFeedLoader$AMPFeedLoaderListener)>($r0)
SOURCE: 
	<com.akamai.media.VideoPlayerContainer: void setFeedURL(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.akamai.config.AMPConfigLoader: void <init>(com.akamai.config.AMPConfigLoader$ConfigLoaderListener)>($r2)
SOURCE: 
	<com.akamai.media.VideoPlayerContainer: void setFeedURLFromConfig()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.akamai.config.AMPConfigLoader: void <init>(com.akamai.config.AMPConfigLoader$ConfigLoaderListener)>($r2)
SOURCE: 
	<com.akamai.media.VideoPlayerContainer: void setMediaFromConfig()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.akamai.config.AMPConfigLoader: void <init>(com.akamai.config.AMPConfigLoader$ConfigLoaderListener)>($r0)
SOURCE: 
	<com.akamai.media.VideoPlayerContainer: void setupPlayback(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.facebook.ads.internal.util.z: void <init>(java.util.Map)>($r3)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r0.<com.facebook.ads.internal.util.q: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.obf.hh$1: void <init>(com.google.obf.hh)>($r0)
SOURCE: 
	<com.google.obf.hh: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:25:06 EDT 2020
Soot has run for 0 min. 56 sec.
==========================(Potential Leaks)==============================


Gmail.apk
Soot started on Wed Apr 15 22:25:29 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<cna: void <init>(cle,java.util.List,java.util.List,java.util.List,boolean,bjq)>($r0, $r1, $r2, $r3, $z0, $r4)
SOURCE: 
	<cle: void a(cle,java.util.List,java.util.List,java.util.List,boolean,bjq)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r40.<edg: void <init>()>()
SOURCE: 
	<cle: void a(int,daa,daa,com.android.mail.providers.Message,com.android.mail.providers.Message,java.lang.CharSequence,cmn,boolean,int,int,android.content.ContentValues,android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r29.<cly: void <init>(cle,cle,android.net.Uri,int,java.lang.String)>($r0, $r0, $r8, $i0, $r19)
SOURCE: 
	<cle: void a(com.android.mail.providers.Message)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<edg: void <init>()>()
SOURCE: 
	<cle: void z()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<cnl: void <init>(com.android.mail.compose.editwebview.EditWebView,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.android.mail.compose.editwebview.EditWebView: void escapePlainText(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<cnm: void <init>(com.android.mail.compose.editwebview.EditWebView,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.android.mail.compose.editwebview.EditWebView: void sanitizeHtml(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<jqp: void <init>(com.google.android.libraries.gsuite.addons.ui.AddonImage)>($r0)
SOURCE: 
	<com.google.android.libraries.gsuite.addons.ui.AddonImage: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<bcb: void <init>(android.content.Context,android.net.Uri,long)>($r7, $r5, $l0)
SOURCE: 
	<com.android.email.task.notification.SnoozeActivity: void a(long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<aus: void <init>(com.android.email.activity.setup.HeadlessAccountSettingsLoader,android.content.Context,java.lang.String)>($r0, $r5, $r6)
SOURCE: 
	<com.android.email.activity.setup.HeadlessAccountSettingsLoader: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<goj: void <init>(android.app.Activity)>($r0)
SOURCE: 
	<com.google.android.gm.ComposeActivityGmail: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<aqk: void <init>(com.android.email.activity.setup.AccountSecurity,com.android.emailcommon.provider.Account)>($r0, $r1)
SOURCE: 
	<com.android.email.activity.setup.AccountSecurity: void b(com.android.emailcommon.provider.Account)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<dst: void <init>(com.android.mail.ui.MailboxSelectionActivity,android.content.ContentResolver)>($r0, $r2)
SOURCE: 
	<com.android.mail.ui.MailboxSelectionActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<fsd: void <init>(android.app.Activity,android.accounts.Account,java.util.List,java.util.List,int)>($r0, $r2, $r3, $r1, $i0)
SOURCE: 
	<com.google.android.gm.preference.LabelSettingsActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<ehl: void <init>(ehk)>($r3)
SOURCE: 
	<com.android.mail.browse.MessageWebView: void onSizeChanged(int,int,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<blj: void <init>(com.android.ex.chips.RecipientEditTextView)>($r0)
SOURCE: 
	<com.android.ex.chips.RecipientEditTextView: void a(android.content.ClipData)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r23.<bkx: void <init>(com.android.ex.chips.RecipientEditTextView,bly,android.widget.ListPopupWindow)>($r0, $r1, $r15)
SOURCE: 
	<com.android.ex.chips.RecipientEditTextView: void g(bly)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r25.<blr: void <init>(com.android.ex.chips.RecipientEditTextView)>($r0)
SOURCE: 
	<com.android.ex.chips.RecipientEditTextView: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r26.<blj: void <init>(com.android.ex.chips.RecipientEditTextView)>($r0)
SOURCE: 
	<com.android.ex.chips.RecipientEditTextView: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<blr: void <init>(com.android.ex.chips.RecipientEditTextView)>($r0)
SOURCE: 
	<com.android.ex.chips.RecipientEditTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r15.<edg: void <init>()>()
SOURCE: 
	<com.android.mail.browse.MessageFooterView: void onClick(android.view.View)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:26:27 EDT 2020
Soot has run for 0 min. 57 sec.
==========================(Potential Leaks)==============================


GO Launcher Z.apk
Soot started on Wed Apr 15 22:29:12 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.commerce.notification.main.ad.mopub.base.mobileads.o: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.commerce.notification.main.ad.mopub.base.mobileads.VastVideoView: void a(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.facebook.ads.internal.util.p: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+GO+Launcher+Z.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


GoodRx.apk
Soot started on Wed Apr 15 22:30:09 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.goodrx.activity.InternetErrorActivity$ConnectionCheckTask: void <init>(com.goodrx.activity.InternetErrorActivity)>($r0)
SOURCE: 
	<com.goodrx.activity.InternetErrorActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4)
SOURCE: 
	<com.goodrx.activity.WelcomeActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.goodrx.activity.main.MainActivity$1: void <init>(com.goodrx.activity.main.MainActivity)>($r0)
SOURCE: 
	<com.goodrx.activity.main.MainActivity: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.google.firebase.auth.internal.FederatedSignInActivity$zza: void <init>(com.google.android.gms.internal.zzdyy,com.google.firebase.auth.internal.FederatedSignInActivity)>($r6, $r0)
SOURCE: 
	<com.google.firebase.auth.internal.FederatedSignInActivity: void onNewIntent(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:33:30 EDT 2020
Soot has run for 3 min. 21 sec.
==========================(Potential Leaks)==============================


Google.apk
Soot started on Wed Apr 15 22:34:07 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.android.launcher3.WallpaperPickerActivity$10: void <init>(com.android.launcher3.WallpaperPickerActivity,android.content.Context,android.net.Uri,android.graphics.Point,android.widget.ImageView,android.widget.FrameLayout)>($r0, $r0, $r1, $r10, $r8, $r4)
SOURCE: 
	<com.android.launcher3.WallpaperPickerActivity: void addTemporaryWallpaperTile(android.net.Uri,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.android.b.a.a: void <init>(android.content.Context,android.net.Uri,android.graphics.RectF,int,int,int,boolean,boolean,com.android.b.a.c)>($r1, $r2, null, $i1, $i2, $i3, 0, 1, null)
SOURCE: 
	<com.android.launcher3.WallpaperPickerActivity: android.graphics.Bitmap createThumbnail(android.graphics.Point,android.content.Context,android.net.Uri,byte[],android.content.res.Resources,int,int,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.android.b.a.a: void <init>(byte[],int,int,int)>($r3, $i1, $i2, $i3)
SOURCE: 
	<com.android.launcher3.WallpaperPickerActivity: android.graphics.Bitmap createThumbnail(android.graphics.Point,android.content.Context,android.net.Uri,byte[],android.content.res.Resources,int,int,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.android.b.a.a: void <init>(android.content.Context,android.content.res.Resources,int,android.graphics.RectF,int,int,int,boolean,boolean,com.android.b.a.c)>($r1, $r4, $i0, null, $i1, $i2, $i3, 0, 1, null)
SOURCE: 
	<com.android.launcher3.WallpaperPickerActivity: android.graphics.Bitmap createThumbnail(android.graphics.Point,android.content.Context,android.net.Uri,byte[],android.content.res.Resources,int,int,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.android.launcher3.Workspace$5: void <init>(com.android.launcher3.Workspace)>($r0)
SOURCE: 
	<com.android.launcher3.Workspace: void setWallpaperDimension()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r12.<com.android.launcher3.WidgetPreviewLoader$PreviewLoadTask: void <init>(com.android.launcher3.WidgetPreviewLoader,com.android.launcher3.WidgetPreviewLoader$WidgetCacheKey,java.lang.Object,int,int,com.android.launcher3.widget.WidgetCell)>($r1, $r9, $r5, $i0, $i1, $r0)
SOURCE: 
	<com.android.launcher3.widget.WidgetCell: void ensurePreview()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r15.<com.google.android.gms.people.accountswitcherview.c: void <init>(com.google.android.gms.people.accountswitcherview.a)>($r13)
SOURCE: 
	<com.google.android.gms.people.accountswitcherview.d: void a(com.google.android.gms.people.model.f,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.google.android.gms.people.accountswitcherview.c: void <init>(com.google.android.gms.people.accountswitcherview.a)>($r12)
SOURCE: 
	<com.google.android.gms.people.accountswitcherview.d: void a(java.util.List,com.google.android.gms.people.model.f)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.android.launcher3.Launcher$17: void <init>(com.android.launcher3.LauncherAppWidgetHost,com.android.launcher3.LauncherAppWidgetInfo)>($r2, $r1)
SOURCE: 
	<com.android.launcher3.Launcher: void deleteWidgetInfo(com.android.launcher3.LauncherAppWidgetInfo)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r15.<com.android.b.a.a: void <init>(android.content.Context,android.net.Uri,android.graphics.RectF,int,int,int,boolean,boolean,com.android.b.a.c)>($r0, $r1, $r9, $i0, $i1, $i2, 1, 0, $r14)
SOURCE: 
	<com.android.launcher3.WallpaperCropActivity: void cropImageAndSetWallpaper$51662RJ4E9NMIP1FDPIN8BQLE9KJMJ33DTMIUOBECHP6UQB45TJM2R3CCLP7ICR45THMURBDDTN2UGJ9EHMM2S23E9NN0L31EDLI8JRE89KN8RB1E11N4RRGE1IM8I31DPI6OPBI7DD5KAAM0(android.net.Uri,com.android.b.a.b,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("wallpaper_loader")
SOURCE: 
	<com.android.launcher3.WallpaperCropActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.google.android.libraries.deepauth.i: void <init>(com.google.android.libraries.deepauth.accountcreation.FlowConfiguration)>($r6)
SOURCE: 
	<com.google.android.libraries.deepauth.ActivityController: void b(com.google.android.libraries.deepauth.bt)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r17.<com.google.android.libraries.deepauth.t: void <init>(com.google.android.libraries.deepauth.s)>($r15)
SOURCE: 
	<com.google.android.libraries.deepauth.ActivityController: void b(com.google.android.libraries.deepauth.bt)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.google.android.libraries.abuse.reporting.v: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void a(com.google.a.a.b)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.libraries.abuse.reporting.q: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void dtD()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.libraries.abuse.reporting.y: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void dtF()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.libraries.abuse.reporting.r: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r37.<com.google.android.libraries.abuse.reporting.r: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.google.android.gms.internal.me: void <init>(android.content.Context)>($r7)
SOURCE: 
	<com.google.android.gms.internal.lh: void dfB()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.google.android.apps.gsa.staticplugins.actionsui.cp: void <init>(com.google.android.apps.gsa.staticplugins.actionsui.co)>($r0)
SOURCE: 
	<com.google.android.apps.gsa.staticplugins.actionsui.co: void a(com.google.android.apps.gsa.contacts.example.ExampleContact)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.apps.gsa.staticplugins.actionsui.cl: void <init>(com.google.android.apps.gsa.staticplugins.actionsui.ch,android.content.res.Resources,android.widget.ImageView)>($r0, $r2, $r6)
SOURCE: 
	<com.google.android.apps.gsa.staticplugins.actionsui.ch: void f(com.google.android.apps.gsa.search.shared.contact.Person)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r21.<com.google.android.apps.gsa.sidekick.main.r.t: void <init>(com.google.android.apps.gsa.shared.e.a,com.google.android.apps.gsa.sidekick.main.r.u,com.google.android.apps.gsa.sidekick.main.g.f)>($r2, $r1, $r22)
SOURCE: 
	<com.google.android.apps.gsa.sidekick.main.actions.EditReminderView: void a(com.google.android.apps.gsa.sidekick.main.r.u,com.google.android.apps.gsa.shared.e.a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r30.<com.google.android.apps.gsa.staticplugins.actionsui.f: void <init>(android.content.res.Resources,android.widget.ImageView,boolean,boolean,boolean,boolean)>($r14, $r10, 1, 1, 1, 1)
SOURCE: 
	<com.google.android.apps.gsa.staticplugins.immersiveactions.OpaActionConfirmationCard: void a(int,com.google.android.apps.gsa.search.shared.ui.actions.e)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r26.<com.google.android.apps.gsa.staticplugins.actionsui.bx: void <init>(android.content.res.Resources,android.widget.ImageView,boolean,boolean)>($r23, $r25, $z0, $z1)
SOURCE: 
	<com.google.android.apps.gsa.staticplugins.actionsui.PersonSelectItem: void a(com.google.android.apps.gsa.search.shared.contact.Person,java.util.List,java.util.Set,java.util.Comparator,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r15.<com.google.android.apps.gsa.staticplugins.actionsui.f: void <init>(android.content.res.Resources,android.widget.ImageView,boolean,boolean,boolean,boolean)>($r16, $r17, 1, 1, 1, 1)
SOURCE: 
	<com.google.android.apps.gsa.staticplugins.actionsui.modular.ExecutedStateView: void a(int,com.google.android.apps.gsa.search.shared.ui.actions.e)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.apps.gsa.gdi.a: void <init>(com.google.android.apps.gsa.gdi.GdiControlActivity,java.lang.String,java.lang.String,java.lang.String[])>($r0, $r3, $r2, $r4)
SOURCE: 
	<com.google.android.apps.gsa.gdi.GdiControlActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.apps.gsa.managespace.c: void <init>(com.google.android.apps.gsa.managespace.VelvetManageSpaceActivity)>($r0)
SOURCE: 
	<com.google.android.apps.gsa.managespace.VelvetManageSpaceActivity: void PD()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.google.android.apps.gsa.handsfree.components.b: void <init>(android.bluetooth.BluetoothAdapter,java.util.Timer)>($r7, $r8)
SOURCE: 
	<com.google.android.apps.gsa.handsfree.components.a: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:36:44 EDT 2020
Soot has run for 2 min. 36 sec.
==========================(Potential Leaks)==============================


Google Calendar.apk
Soot started on Wed Apr 15 22:37:33 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.calendar.event.EventForwardingActivity$BuildIcsFileTask: void <init>(com.google.android.calendar.event.EventForwardingActivity)>($r0)
SOURCE: 
	<com.google.android.calendar.event.EventForwardingActivity: void <init>()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.calendar.timely.SyncOffNotificationsManager$1: void <init>(com.google.android.calendar.timely.SyncOffNotificationsManager,java.util.Set)>($r2, $r3)
SOURCE: 
	<com.google.android.calendar.timely.SyncOffNotification: void onPositiveButtonClicked()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.calendar.AllInOneCalendarActivity$5: void <init>(com.google.android.calendar.AllInOneCalendarActivity,java.lang.String)>($r0, $r4)
SOURCE: 
	<com.google.android.calendar.AllInOneCalendarActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.google.android.calendar.alerts.NotificationActionTrampoline$RefreshNotificationsTask: void <init>(android.content.Context)>($r0)
SOURCE: 
	<com.google.android.calendar.alerts.NotificationActionTrampoline: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.google.android.calendar.alerts.QuickResponseActivity$QueryThread: void <init>(com.google.android.calendar.alerts.QuickResponseActivity,com.google.android.calendar.api.event.EventKey)>($r0, $r5)
SOURCE: 
	<com.google.android.calendar.alerts.QuickResponseActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.google.android.calendar.alerts.QuickResponseActivity$QueryThread: void <init>(com.google.android.calendar.alerts.QuickResponseActivity,com.google.android.calendar.api.event.EventKey,java.lang.String)>($r0, $r3, $r4)
SOURCE: 
	<com.google.android.calendar.alerts.QuickResponseActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r30.<com.google.android.calendar.launch.uri.ViewEventUriHandler$ResolveSyncIdAndLaunchIntent: void <init>(com.google.android.calendar.launch.uri.ViewEventUriHandler,android.app.Activity)>($r28, $r23)
SOURCE: 
	<com.google.android.calendar.launch.LaunchInfoActivity: void tryStartup()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r20.<com.google.android.calendar.timely.report.ViewDebugReportActivity$1: void <init>(com.google.android.calendar.timely.report.ViewDebugReportActivity,java.lang.String,com.google.android.calendar.timely.report.ViewDebugReportActivity,android.widget.TextView,com.google.android.calendar.timely.LoadingStateManager)>($r0, $r4, $r0, $r9, $r19)
SOURCE: 
	<com.google.android.calendar.timely.report.ViewDebugReportActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:38:05 EDT 2020
Soot has run for 0 min. 31 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.google.android.calendar.event.ConferenceCallView$ConferenceCallLinkMovementMethod: com.google.android.calendar.event.ConferenceCallView$ConferenceCallLinkMovementMethod instance>
SOURCE: 
	<com.google.android.calendar.event.ConferenceCallView: void setTextIsSelectable(boolean)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.google.android.calendar.AllPrefsUpgradeReceiver dummyMainMethod_com_google_android_calendar_AllPrefsUpgradeReceiver(android.content.Intent)>
	2: <com.google.android.calendar.UpgradeReceiver: void <clinit>()>
	3: <com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>
	4: <com.google.common.collect.Collections2$FilteredCollection: boolean add(java.lang.Object)>
	5: <com.google.common.base.Predicates$AndPredicate: boolean apply(java.lang.Object)>
	6: <com.google.common.collect.Lists$TransformingRandomAccessList: java.lang.Object get(int)>
	7: <com.google.android.apps.calendar.util.concurrent.SubscriptionManager$$Lambda$0: java.lang.Object apply(java.lang.Object)>
	8: <com.google.android.calendar.newapi.screen.reminder.ReminderSaveFlow$$Lambda$2: void accept(java.lang.Object)>
	9: <com.google.android.calendar.newapi.screen.reminder.ReminderEditScreenController: void onTaskSaved(boolean,com.google.android.gms.reminders.model.Task,int)>
	10: <com.google.android.calendar.newapi.screen.ViewScreenController: void updateSegments()>
	11: <com.google.android.calendar.newapi.screen.ViewScreen: void updateSegmentViews()>
	12: <com.google.android.calendar.newapi.segment.smartmail.flight.FlightInformationViewSegment: void updateUi()>
	13: <com.google.android.calendar.tiles.view.TextTileView: void <init>(android.content.Context)>
	14: <com.google.android.calendar.tiles.view.TileView: void <init>(android.content.Context)>
	15: <com.google.android.calendar.tiles.view.TileView: com.google.android.calendar.tiles.view.TileView setContentView(android.view.View)>
	16: <com.google.android.calendar.newapi.segment.note.NoteViewSegment: void onContentViewSet(android.view.View)>
	17: <com.google.android.calendar.event.ConferenceCallView: void setTextIsSelectable(boolean)>


Google Chrome.apk
Soot started on Wed Apr 15 22:38:36 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Google+Chrome.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


GP Books.apk
Soot started on Wed Apr 15 22:38:58 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.apps.play.books.app.BaseBooksActivity$CheckForUnsupportedCountry: void <init>(com.google.android.apps.play.books.app.BaseBooksActivity,com.google.android.apps.play.books.app.BaseBooksActivity$1)>($r0, null)
SOURCE: 
	<com.google.android.apps.play.books.app.BaseBooksActivity: void onStart()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.google.android.apps.play.books.app.HomeActivity$InitializeSyncTask: void <init>(com.google.android.apps.play.books.app.HomeActivity,android.accounts.Account,com.google.android.apps.play.books.app.HomeActivity$1)>($r0, $r1, null)
SOURCE: 
	<com.google.android.apps.play.books.app.HomeActivity: void onSelectedAccount(android.accounts.Account)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.apps.play.books.ublib.opengl.GLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<com.google.android.apps.play.books.ublib.opengl.GLSurfaceView: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.google.android.apps.play.books.ublib.opengl.GLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r9)
SOURCE: 
	<com.google.android.apps.play.books.ublib.opengl.GLSurfaceView: void setRenderer(com.google.android.apps.play.books.ublib.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.google.android.play.image.FifeImageView$7: void <init>(com.google.android.play.image.FifeImageView,int,int,com.google.android.play.image.BitmapTransformation$TransformationCallback)>($r0, $i0, $i1, $r2)
SOURCE: 
	<com.google.android.play.image.FifeImageView: void transformBitmapAsync(android.graphics.Bitmap,com.google.android.play.image.BitmapTransformation$TransformationCallback)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:39:47 EDT 2020
Soot has run for 0 min. 48 sec.
==========================(Potential Leaks)==============================


GP Music.apk
Soot started on Wed Apr 15 22:39:52 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.ads.interactivemedia.v3.impl.v$1: void <init>(com.google.ads.interactivemedia.v3.impl.v)>($r0)
SOURCE: 
	<com.google.ads.interactivemedia.v3.impl.v: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.zzy: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzhI()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r21.<com.google.android.music.ui.playback.AudioPreviewActivity$MetadataRetrieverAsyncTask: void <init>(com.google.android.music.ui.playback.AudioPreviewActivity,android.content.Context,android.media.MediaMetadataRetriever)>($r0, $r16, $r20)
SOURCE: 
	<com.google.android.music.ui.playback.AudioPreviewActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.google.android.play.image.FifeImageView$7: void <init>(com.google.android.play.image.FifeImageView,int,int,com.google.android.play.image.BitmapTransformation$TransformationCallback)>($r0, $i0, $i1, $r2)
SOURCE: 
	<com.google.android.play.image.FifeImageView: void transformBitmapAsync(android.graphics.Bitmap,com.google.android.play.image.BitmapTransformation$TransformationCallback)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.android.music.ui.settings.MusicSettingsActivity$17: void <init>(com.google.android.music.ui.settings.MusicSettingsActivity)>($r0)
SOURCE: 
	<com.google.android.music.ui.settings.MusicSettingsActivity: void checkForWearSettingsAsync()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.google.android.music.ui.youtube.VideoSearchActivity$YouTubeQueryAsyncTask: void <init>(com.google.android.music.ui.youtube.VideoSearchActivity,com.google.android.music.ui.youtube.VideoSearchActivity$1)>($r0, null)
SOURCE: 
	<com.google.android.music.ui.youtube.VideoSearchActivity: void runQuery()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:40:46 EDT 2020
Soot has run for 0 min. 54 sec.
==========================(Potential Leaks)==============================


GP Newsstand.apk
Soot started on Wed Apr 15 22:40:59 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+GP+Newsstand.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


ibisPaint X.apk
Soot started on Wed Apr 15 22:41:35 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners(Instrument.java:139)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:36)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+ibisPaint+X.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners%28Instrument.java%3A139%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A36%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Instagram.apk
Soot started on Wed Apr 15 22:42:05 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.instagram.ui.widget.drawing.gl.z: void <init>(java.lang.ref.WeakReference)>($r3)
SOURCE: 
	<com.instagram.ui.widget.drawing.gl.ad: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.instagram.ui.widget.drawing.gl.z: void <init>(java.lang.ref.WeakReference)>($r7)
SOURCE: 
	<com.instagram.ui.widget.drawing.gl.ad: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r21.<com.facebook.browser.lite.a.a: void <init>(android.widget.ImageView)>($r8)
SOURCE: 
	<com.facebook.browser.lite.MessengerLiteChrome: void <init>(android.content.Context,android.util.AttributeSet)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:42:58 EDT 2020
Soot has run for 0 min. 53 sec.
==========================(Potential Leaks)==============================


inStar.apk
Soot started on Wed Apr 15 22:46:20 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.ewmobile.colour.activity.PaintingWallActivity$2: void <init>(com.ewmobile.colour.activity.PaintingWallActivity,com.ewmobile.colour.activity.PaintingWallActivity$a)>($r0, $r1)
SOURCE: 
	<com.ewmobile.colour.activity.PaintingWallActivity: void a(com.ewmobile.colour.activity.PaintingWallActivity$a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.k.r: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.c.b.g: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.ewmobile.colour.activity.ColourActivity: void a(int,android.support.v7.app.c,android.view.View)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.ewmobile.colour.activity.ColourActivity: void tintClick(android.view.View)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.ewmobile.colour.drawboard.DrawingBoardView: void b(int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.ewmobile.colour.drawboard.DrawingBoardView: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.j: void setImageUrl(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r5)
SOURCE: 
	<com.facebook.ads.internal.view.m: void setUpContent(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.ewmobile.colour.activity.vip.VipActivityB$1: void <init>(com.ewmobile.colour.activity.vip.VipActivityB)>($r0)
SOURCE: 
	<com.ewmobile.colour.activity.vip.VipActivityB: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.ewmobile.colour.activity.vip.VipActivityB$2: void <init>(com.ewmobile.colour.activity.vip.VipActivityB,android.os.AsyncTask)>($r0, $r1)
SOURCE: 
	<com.ewmobile.colour.activity.vip.VipActivityB: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.ewmobile.colour.activity.vip.VipActivityB$3: void <init>(com.ewmobile.colour.activity.vip.VipActivityB)>($r0)
SOURCE: 
	<com.ewmobile.colour.activity.vip.VipActivityB: void recovery()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzmk()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.k.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)
SOURCE: 
	<com.ewmobile.colour.activity.MainActivity: void a(com.ewmobile.colour.firebase.entity.PixelPhoto,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.ew.sdk.adboost.AdView$a: void <init>(com.ew.sdk.adboost.AdView)>($r0)
SOURCE: 
	<com.ew.sdk.adboost.AdView: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r4)
SOURCE: 
	<com.facebook.ads.internal.view.b.d: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.unity3d.ads.video.VideoPlayerView$2: void <init>(com.unity3d.ads.video.VideoPlayerView)>($r0)
SOURCE: 
	<com.unity3d.ads.video.VideoPlayerView: void startPrepareTimer(long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.unity3d.ads.video.VideoPlayerView$1: void <init>(com.unity3d.ads.video.VideoPlayerView)>($r0)
SOURCE: 
	<com.unity3d.ads.video.VideoPlayerView: void startVideoProgressTimer()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:46:59 EDT 2020
Soot has run for 0 min. 38 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.unity3d.ads.api.AdUnit: com.unity3d.ads.adunit.AdUnitActivity _adUnitActivity>
SOURCE: 
	<com.unity3d.ads.api.AdUnit: void setAdUnitActivity(com.unity3d.ads.adunit.AdUnitActivity)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.unity3d.ads.adunit.AdUnitSoftwareActivity dummyMainMethod_com_unity3d_ads_adunit_AdUnitSoftwareActivity(android.content.Intent)>
	2: <com.unity3d.ads.adunit.AdUnitActivity: void onDestroy()>
	3: <com.unity3d.ads.api.AdUnit: void setAdUnitActivity(com.unity3d.ads.adunit.AdUnitActivity)>
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.unity3d.ads.api.VideoPlayer: com.unity3d.ads.video.VideoPlayerView _videoPlayerView>
SOURCE: 
	<com.unity3d.ads.api.VideoPlayer: void setVideoPlayerView(com.unity3d.ads.video.VideoPlayerView)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.unity3d.ads.adunit.AdUnitSoftwareActivity dummyMainMethod_com_unity3d_ads_adunit_AdUnitSoftwareActivity(android.content.Intent)>
	2: <com.unity3d.ads.adunit.AdUnitActivity: void onPause()>
	3: <com.unity3d.ads.adunit.AdUnitActivity: void destroyVideoPlayer()>
	4: <com.unity3d.ads.api.VideoPlayer: void setVideoPlayerView(com.unity3d.ads.video.VideoPlayerView)>


LINE Camera.apk
Soot started on Wed Apr 15 22:47:38 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
PATH TO SOURCE METHOD: 
	0: <com.drew.imaging.ImageMetadataReader: void main(java.lang.String[])>
	1: <com.drew.metadata.Metadata: com.drew.metadata.Directory getOrCreateDirectory(java.lang.Class)>
	2: <com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
	3: <com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>
	4: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(java.lang.Object,java.lang.Object)>
	5: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(com.linecrop.kale.android.camera.shooting.sticker.Sticker,com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	6: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer: com.linecrop.kale.android.camera.shooting.sticker.StickerStatus getNonNullStatus(com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	7: <com.linecrop.kale.android.camera.shooting.sticker.StickerStatus: void setReadyStatus(com.linecrop.kale.android.camera.shooting.sticker.StickerStatus$ReadyStatus)>
	8: <jp.naver.linecamera.android.common.util.MainHandler: void post(java.lang.Runnable)>
	9: <it.sephiroth.android.library.widget.AbsHListView$PerformClick: void run()>
	10: <it.sephiroth.android.library.widget.AbsHListView: boolean performItemClick(android.view.View,int,long)>
	11: <it.sephiroth.android.library.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>
	12: <jp.naver.linecamera.android.activity.HomeActivity: void onItemClick(it.sephiroth.android.library.widget.AdapterView,android.view.View,int,long)>
	13: <jp.naver.linecamera.android.common.controller.CampaignCtrl: void process(java.lang.Runnable,int)>
	14: <jp.naver.linecamera.android.resource.model.Campaign: boolean processLink(jp.naver.linecamera.android.activity.HomeActivity)>
	15: <jp.naver.linecamera.android.activity.HomeActivity: void showFacebookAd()>
	16: <jp.naver.linecamera.android.home.FacebookAdCtrl: void showAsHome(android.content.Context)>
	17: <com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.zzy: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzhe()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.util.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
PATH TO SOURCE METHOD: 
	0: <com.drew.imaging.ImageMetadataReader: void main(java.lang.String[])>
	1: <com.drew.metadata.Metadata: com.drew.metadata.Directory getOrCreateDirectory(java.lang.Class)>
	2: <com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
	3: <com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>
	4: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(java.lang.Object,java.lang.Object)>
	5: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(com.linecrop.kale.android.camera.shooting.sticker.Sticker,com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	6: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer: com.linecrop.kale.android.camera.shooting.sticker.StickerStatus getNonNullStatus(com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	7: <com.linecrop.kale.android.camera.shooting.sticker.StickerStatus: void setReadyStatus(com.linecrop.kale.android.camera.shooting.sticker.StickerStatus$ReadyStatus)>
	8: <jp.naver.linecamera.android.common.util.MainHandler: void post(java.lang.Runnable)>
	9: <com.facebook.ads.internal.view.o$1: void run()>
	10: <com.facebook.ads.internal.g.r: void a(com.facebook.ads.internal.g.q)>
	11: <com.facebook.ads.internal.g.r: void b(com.facebook.ads.internal.g.q)>
	12: <com.facebook.ads.internal.view.s$2: void a(com.facebook.ads.internal.g.q)>
	13: <com.facebook.ads.internal.view.s$2: void a(com.facebook.ads.internal.view.d.a.h)>
	14: <com.facebook.ads.AudienceNetworkActivity$3: void a(java.lang.String,com.facebook.ads.internal.g.q)>
	15: <com.facebook.ads.AudienceNetworkActivity: void c(com.facebook.ads.AudienceNetworkActivity)>
	16: <com.facebook.ads.AudienceNetworkActivity: void b()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.util.q: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.drew.imaging.ImageMetadataReader: void main(java.lang.String[])>
	1: <com.drew.metadata.Metadata: com.drew.metadata.Directory getOrCreateDirectory(java.lang.Class)>
	2: <com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
	3: <com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>
	4: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(java.lang.Object,java.lang.Object)>
	5: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer$1: int compare(com.linecrop.kale.android.camera.shooting.sticker.Sticker,com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	6: <com.linecrop.kale.android.camera.shooting.sticker.StickerContainer: com.linecrop.kale.android.camera.shooting.sticker.StickerStatus getNonNullStatus(com.linecrop.kale.android.camera.shooting.sticker.Sticker)>
	7: <com.linecrop.kale.android.camera.shooting.sticker.StickerStatus: void setReadyStatus(com.linecrop.kale.android.camera.shooting.sticker.StickerStatus$ReadyStatus)>
	8: <jp.naver.linecamera.android.common.util.MainHandler: void post(java.lang.Runnable)>
	9: <com.facebook.ads.internal.DisplayAdController$5: void run()>
	10: <com.facebook.ads.internal.DisplayAdController: void c(com.facebook.ads.internal.DisplayAdController)>
	11: <com.facebook.ads.internal.DisplayAdController: void l()>
	12: <com.facebook.ads.internal.DisplayAdController: void a(com.facebook.ads.internal.adapters.r,com.facebook.ads.internal.f.d,java.util.Map)>
	13: <com.facebook.ads.internal.adapters.i: void a(android.content.Context,com.facebook.ads.a.a,java.util.Map,com.facebook.ads.internal.g.f)>
	14: <com.facebook.ads.internal.adapters.i: void a(android.content.Context,com.facebook.ads.a.a,org.json.JSONObject,com.facebook.ads.internal.g.f,android.os.Bundle)>
	15: <com.facebook.ads.internal.adapters.k: void a()>
	16: <com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
Soot finished on Wed Apr 15 22:48:55 EDT 2020
Soot has run for 1 min. 16 sec.
==========================(Potential Leaks)==============================


Marvel Comics.apk
Soot started on Wed Apr 15 22:49:21 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.PaintActivity$2: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.d.d: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.b.a)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.b.a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.d.e: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.b.a)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.d.f: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<net.hockeyapp.android.views.AttachmentView$1: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.PaintView$1: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.d.g: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.d.h: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:49:45 EDT 2020
Soot has run for 0 min. 24 sec.
==========================(Potential Leaks)==============================


Match.apk
Soot started on Wed Apr 15 22:50:34 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.match.matchlocal.facebook.a$c: void <init>()>()
SOURCE: 
	<com.match.matchlocal.flows.facebook.FacebookAlbumPhotosActivity: void z()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.match.matchlocal.facebook.a$b: void <init>()>()
SOURCE: 
	<com.match.matchlocal.flows.facebook.FacebookPhotoAlbumsActivity: void z()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:58:16 EDT 2020
Soot has run for 7 min. 41 sec.
==========================(Potential Leaks)==============================


McDonald.apk
Soot started on Wed Apr 15 22:58:47 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$CountDownTimer: void <init>(com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView,com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$1)>($r0, null)
SOURCE: 
	<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView: void setNotification(com.apptentive.android.sdk.module.messagecenter.model.ApptentiveToastNotification)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView$1: void <init>(com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveAvatarView: void fetchImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.amap.api.mapcore.util.k$i: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<com.amap.api.mapcore.util.k: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.amap.api.mapcore.util.k$i: void <init>(java.lang.ref.WeakReference)>($r9)
SOURCE: 
	<com.amap.api.mapcore.util.k: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<com.baidu.android.pushservice.richmedia.a: void <init>(android.content.Context,com.baidu.android.pushservice.richmedia.f,com.baidu.android.pushservice.richmedia.c)>($r0, $r12, $r10)
SOURCE: 
	<com.baidu.android.pushservice.richmedia.MediaListActivity: void a(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5)
SOURCE: 
	<com.mcdonalds.restaurant.activity.MockLocationActivity: void getCountryName(double,double)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.mcdonalds.order.activity.OrderHelperActivity$23: void <init>(com.mcdonalds.order.activity.OrderHelperActivity)>($r0)
SOURCE: 
	<com.mcdonalds.order.activity.OrderHelperActivity: void applyFilters()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r0.<hk.com.aisoft.easyaddrui.h: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, "1")
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void getStartCity()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void getStartupLoad()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<hk.com.aisoft.easyaddrui.k: void <init>(hk.com.aisoft.easyaddrui.Address)>($r1)
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void getStore(hk.com.aisoft.easyaddrui.Address,hk.com.aisoft.easyaddrui.GetStoreCallbackInterface)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<hk.com.aisoft.easyaddrui.m: void <init>(hk.com.aisoft.easyaddrui.Address)>($r1)
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void getVerify(hk.com.aisoft.easyaddrui.Address)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<hk.com.aisoft.easyaddrui.r: void <init>(java.lang.String)>($r6)
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void loadEAView(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<hk.com.aisoft.easyaddrui.o: void <init>(hk.com.aisoft.easyaddrui.aa)>($r14)
SOURCE: 
	<hk.com.aisoft.easyaddrui.eaView: void loadEAView(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.mcdonalds.app.activities.AETPhotoShareActivity$17: void <init>(com.mcdonalds.app.activities.AETPhotoShareActivity)>($r0)
SOURCE: 
	<com.mcdonalds.app.activities.AETPhotoShareActivity: void thumbnailClicked(java.lang.String,int,android.widget.ImageView)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.mcdonalds.home.view.HomeBackgroundScrollView: void initScrollViewAnimator()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2)
SOURCE: 
	<com.foresee.sdk.cxMeasure.tracker.app.SurveyActivity: void surveyCompleted()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.foresee.sdk.cxMeasure.tracker.app.ContactSurveyInviteActivity: void submitDetailForm(android.app.Activity)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 22:59:59 EDT 2020
Soot has run for 1 min. 12 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.mcdonalds.sdk.services.RonaldService: android.app.Activity mCurrentActivity>
SOURCE: 
	<com.mcdonalds.sdk.services.RonaldService: void setCurrentActivity(android.app.Activity)>
NO PATH TO SOURCE METHOD FOUND.


Merriam-Webster.apk
Soot started on Wed Apr 15 23:00:32 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.merriamwebster.dictionary.widget.TaboolaRecommendation$NotifyClickOnRecommendationTask: void <init>(com.merriamwebster.dictionary.widget.TaboolaRecommendation$1)>(null)
SOURCE: 
	<com.merriamwebster.dictionary.widget.TaboolaRecommendation: void open()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.merriamwebster.dictionary.widget.TaboolaRecommendation$NotifyVisibleRecommendationTask: void <init>(com.merriamwebster.dictionary.widget.TaboolaRecommendation$1)>(null)
SOURCE: 
	<com.merriamwebster.dictionary.widget.TaboolaRecommendation: void setModel(com.merriamwebster.dictionary.widget.TaboolaRecommendation$RecommendationModel)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.merriamwebster.dictionary.widget.TaboolaRecommendation$LoadRecommendationTask: void <init>(com.merriamwebster.dictionary.widget.TaboolaRecommendation,android.content.Context)>($r0, $r2)
SOURCE: 
	<com.merriamwebster.dictionary.widget.TaboolaRecommendation: void loadRecommendation()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.aa: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.f: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.mopub.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.mopub.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.m.ad: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.g: void b()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:01:05 EDT 2020
Soot has run for 0 min. 33 sec.
==========================(Potential Leaks)==============================


Messenger.apk
Soot started on Wed Apr 15 23:01:42 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<X.09U: void <init>(X.01L,java.lang.String)>($r0, "AsyncView")
SOURCE: 
	<X.01L: void surfaceCreated(android.view.SurfaceHolder)>
NO PATH TO SOURCE METHOD FOUND.
Exception in thread "Thread-24" java.lang.RuntimeException: Trying to cast reference type java.lang.Object to a primitive
	at soot.toDex.ExprVisitor.castPrimitive(ExprVisitor.java:684)
	at soot.toDex.ExprVisitor.caseCastExpr(ExprVisitor.java:639)
	at soot.jimple.internal.AbstractCastExpr.apply(AbstractCastExpr.java:128)
	at soot.toDex.StmtVisitor.caseAssignStmt(StmtVisitor.java:497)
	at soot.jimple.internal.JAssignStmt.apply(JAssignStmt.java:242)
	at soot.toDex.DexPrinter.toInstructions(DexPrinter.java:1521)
	at soot.toDex.DexPrinter.toMethodImplementation(DexPrinter.java:1184)
	at soot.toDex.DexPrinter.toMethods(DexPrinter.java:1093)
	at soot.toDex.DexPrinter.addAsClassDefItem(DexPrinter.java:666)
	at soot.toDex.DexPrinter.add(DexPrinter.java:1656)
	at soot.PackManager.writeClass(PackManager.java:1096)
	at soot.PackManager.lambda$writeOutput$1(PackManager.java:699)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.RuntimeException: Trying to cast reference type java.lang.Object to a primitive
	at soot.toDex.ExprVisitor.castPrimitive(ExprVisitor.java:684)
	at soot.toDex.ExprVisitor.caseCastExpr(ExprVisitor.java:639)
	at soot.jimple.internal.AbstractCastExpr.apply(AbstractCastExpr.java:128)
	at soot.toDex.StmtVisitor.caseAssignStmt(StmtVisitor.java:497)
	at soot.jimple.internal.JAssignStmt.apply(JAssignStmt.java:242)
	at soot.toDex.DexPrinter.toInstructions(DexPrinter.java:1521)
	at soot.toDex.DexPrinter.toMethodImplementation(DexPrinter.java:1184)
	at soot.toDex.DexPrinter.toMethods(DexPrinter.java:1093)
	at soot.toDex.DexPrinter.addAsClassDefItem(DexPrinter.java:666)
	at soot.toDex.DexPrinter.add(DexPrinter.java:1656)
	at soot.PackManager.writeClass(PackManager.java:1096)
	at soot.PackManager.lambda$writeOutput$1(PackManager.java:699)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.lang.RuntimeException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Messenger.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.lang.RuntimeException%3A+Trying+to+cast+reference+type+java.lang.Object+to+a+primitive%0A%09at+soot.toDex.ExprVisitor.castPrimitive%28ExprVisitor.java%3A684%29%0A%09at+soot.toDex.ExprVisitor.caseCastExpr%28ExprVisitor.java%3A639%29%0A%09at+soot.jimple.internal.AbstractCastExpr.apply%28AbstractCastExpr.java%3A128%29%0A%09at+soot.toDex.StmtVisitor.caseAssignStmt%28StmtVisitor.java%3A497%29%0A%09at+soot.jimple.internal.JAssignStmt.apply%28JAssignStmt.java%3A242%29%0A%09at+soot.toDex.DexPrinter.toInstructions%28DexPrinter.java%3A1521%29%0A%09at+soot.toDex.DexPrinter.toMethodImplementation%28DexPrinter.java%3A1184%29%0A%09at+soot.toDex.DexPrinter.toMethods%28DexPrinter.java%3A1093%29%0A%09at+soot.toDex.DexPrinter.addAsClassDefItem%28DexPrinter.java%3A666%29%0A%09at+soot.toDex.DexPrinter.add%28DexPrinter.java%3A1656%29%0A%09at+soot.PackManager.writeClass%28PackManager.java%3A1096%29%0A%09at+soot.PackManager.lambda%24writeOutput%241%28PackManager.java%3A699%29%0A%09at+java.base%2Fjava.util.concurrent.ThreadPoolExecutor.runWorker%28ThreadPoolExecutor.java%3A1128%29%0A%09at+java.base%2Fjava.util.concurrent.ThreadPoolExecutor%24Worker.run%28ThreadPoolExecutor.java%3A628%29%0A%09at+java.base%2Fjava.lang.Thread.run%28Thread.java%3A834%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Mirror.apk
Soot started on Wed Apr 15 23:01:53 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.zzw: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzc: void zzoh()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.facebook.ads.internal.util.p: void <init>(android.widget.ImageView)>($r6)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.facebook.ads.internal.util.p: void <init>(com.facebook.ads.internal.i.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:02:17 EDT 2020
Soot has run for 0 min. 24 sec.
==========================(Potential Leaks)==============================


My baby Piano.apk
Soot started on Wed Apr 15 23:02:41 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzfE()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.dokdoapps.mybabypiano.Piano$LoadThread: void <init>(com.dokdoapps.mybabypiano.Piano)>($r0)
SOURCE: 
	<com.dokdoapps.mybabypiano.Piano: void init(com.dokdoapps.mybabypiano.MainActivity)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.dokdoapps.utility.SoundUpdater$Update: void <init>(com.dokdoapps.utility.SoundUpdater)>($r0)
SOURCE: 
	<com.dokdoapps.utility.SoundUpdater: void start(com.dokdoapps.utility.SoundUpdater$Callback)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:02:58 EDT 2020
Soot has run for 0 min. 17 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.dokdoapps.utility.GoogleServiceManager: com.google.android.gms.ads.AdView adView>
SOURCE: 
	<com.dokdoapps.utility.GoogleServiceManager: void <init>()>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.dokdoapps.mybabypiano.MainActivity dummyMainMethod_com_dokdoapps_mybabypiano_MainActivity(android.content.Intent)>
	2: <com.dokdoapps.mybabypiano.MainActivity: void onCreate(android.os.Bundle)>
	3: <com.dokdoapps.utility.ActivityManager: void onCreate(android.os.Bundle)>
	4: <com.dokdoapps.utility.GoogleServiceManager: void <init>()>
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.dokdoapps.utility.GoogleServiceManager: com.dokdoapps.utility.ActivityManager activityManager>
SOURCE: 
	<com.dokdoapps.utility.GoogleServiceManager: void init(com.dokdoapps.utility.ActivityManager)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.dokdoapps.mybabypiano.MainActivity dummyMainMethod_com_dokdoapps_mybabypiano_MainActivity(android.content.Intent)>
	2: <com.dokdoapps.mybabypiano.MainActivity: void onCreate(android.os.Bundle)>
	3: <com.dokdoapps.utility.ActivityManager: void onCreate(android.os.Bundle)>
	4: <com.dokdoapps.utility.GoogleServiceManager: void init(com.dokdoapps.utility.ActivityManager)>


NFL.apk
Soot started on Wed Apr 15 23:03:13 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1)
SOURCE: 
	<com.nfl.mobile.ui.views.CompoundTableView: void b()>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	2: <com.nfl.mobile.service.b$b$1: java.lang.Object invoke(java.lang.Object)>
	3: <rx.internal.operators.OperatorOnBackpressureDrop$2: void onNext(java.lang.Object)>
	4: <com.nfl.mobile.d.hs: void call(java.lang.Object)>
	5: <com.nfl.mobile.ui.views.CompoundTableView$d: void a(java.util.List)>
	6: <com.nfl.mobile.ui.views.CompoundTableView$a: void a()>
	7: <com.nfl.mobile.ui.views.CompoundTableView$e: void a()>
	8: <com.nfl.mobile.ui.views.CompoundTableView: void i(com.nfl.mobile.ui.views.CompoundTableView)>
	9: <com.nfl.mobile.ui.views.CompoundTableView: void b()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzmk()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<net.hockeyapp.android.PaintActivity$2: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r7)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void makeResult()>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	2: <com.nfl.mobile.service.b$b$1: java.lang.Object invoke(java.lang.Object)>
	3: <rx.internal.operators.OperatorDelay$1: void onCompleted()>
	4: <rx.android.schedulers.LooperScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>
	5: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	6: <net.hockeyapp.android.PaintActivity$1: void onClick(android.content.DialogInterface,int)>
	7: <net.hockeyapp.android.PaintActivity: void access$000(net.hockeyapp.android.PaintActivity)>
	8: <net.hockeyapp.android.PaintActivity: void makeResult()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.AttachmentView$1: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	2: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	3: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	4: <net.hockeyapp.android.FeedbackActivity$2: void run()>
	5: <net.hockeyapp.android.FeedbackActivity: void configureFeedbackView(boolean)>
	6: <net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.tasks.GetFileSizeTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void configureView()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.DownloadFileTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void createDownloadTask(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	2: <com.nfl.mobile.service.b$b$1: java.lang.Object invoke(java.lang.Object)>
	3: <rx.internal.operators.OperatorDelay$1: void onCompleted()>
	4: <rx.android.schedulers.LooperScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>
	5: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	6: <net.hockeyapp.android.tasks.DownloadFileTask$1: void onClick(android.content.DialogInterface,int)>
	7: <net.hockeyapp.android.UpdateActivity$4: void downloadFailed(net.hockeyapp.android.tasks.DownloadFileTask,java.lang.Boolean)>
	8: <net.hockeyapp.android.UpdateActivity: void startDownloadTask()>
	9: <net.hockeyapp.android.UpdateActivity: void startDownloadTask(java.lang.String)>
	10: <net.hockeyapp.android.UpdateActivity: void createDownloadTask(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.LoginTask: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void performAuthentication()>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	2: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	3: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	4: <android.support.v7.view.menu.CascadingMenuPopup$3$1: void run()>
	5: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>
	6: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int)>
	7: <android.support.v7.view.menu.MenuItemImpl: boolean expandActionView()>
	8: <android.support.v7.view.menu.MenuBuilder: boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl)>
	9: <android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl)>
	10: <android.support.v7.widget.SearchView: void onActionViewExpanded()>
	11: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	12: <android.support.v7.widget.SearchView: void onSearchClicked()>
	13: <net.hockeyapp.android.LoginActivity$1: void onClick(android.view.View)>
	14: <net.hockeyapp.android.LoginActivity: void access$000(net.hockeyapp.android.LoginActivity)>
	15: <net.hockeyapp.android.LoginActivity: void performAuthentication()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.ParseFeedbackTask: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void createParseFeedbackTask(java.lang.String,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()>
	2: <com.nfl.mobile.service.b$b$1: java.lang.Object invoke(java.lang.Object)>
	3: <rx.internal.operators.OperatorDelay$1: void onCompleted()>
	4: <rx.android.schedulers.LooperScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>
	5: <net.hockeyapp.android.FeedbackActivity$FeedbackHandler: void handleMessage(android.os.Message)>
	6: <net.hockeyapp.android.FeedbackActivity: void access$700(net.hockeyapp.android.FeedbackActivity,java.lang.String,java.lang.String)>
	7: <net.hockeyapp.android.FeedbackActivity: void startParseFeedbackTask(java.lang.String,java.lang.String)>
	8: <net.hockeyapp.android.FeedbackActivity: void createParseFeedbackTask(java.lang.String,java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void sendFetchFeedback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	2: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	3: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	4: <android.support.v7.view.menu.CascadingMenuPopup$3$1: void run()>
	5: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>
	6: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int)>
	7: <android.support.v7.view.menu.MenuItemImpl: boolean expandActionView()>
	8: <android.support.v7.view.menu.MenuBuilder: boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl)>
	9: <android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl)>
	10: <android.support.v7.widget.SearchView: void onActionViewExpanded()>
	11: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	12: <android.support.v7.widget.SearchView: void onSearchClicked()>
	13: <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	14: <net.hockeyapp.android.FeedbackActivity: void sendFetchFeedback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.PaintView$1: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+NFL.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Nike Run Club.apk
Soot started on Wed Apr 15 23:11:35 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.baidu.platform.comapi.map.m: void <init>(android.graphics.SurfaceTexture,com.baidu.platform.comapi.map.m$a,java.util.concurrent.atomic.AtomicBoolean,com.baidu.platform.comapi.map.F)>($r1, $r0, $r5, $r0)
SOURCE: 
	<com.baidu.platform.comapi.map.F: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.baidu.mapapi.map.WearMapView$AnimationTask: void <init>(com.baidu.mapapi.map.WearMapView)>($r0)
SOURCE: 
	<com.baidu.mapapi.map.WearMapView: void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.baidu.mapapi.map.WearMapView$AnimationTask: void <init>(com.baidu.mapapi.map.WearMapView)>($r0)
SOURCE: 
	<com.baidu.mapapi.map.WearMapView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.nike.shared.features.common.views.l$3: void <init>(com.nike.shared.features.common.views.l,boolean,android.os.Handler,float)>($r0, $z0, $r2, $f0)
SOURCE: 
	<com.nike.shared.features.common.views.l: void zoomAnimation(boolean)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:12:31 EDT 2020
Soot has run for 0 min. 55 sec.
==========================(Potential Leaks)==============================


NOOK.apk
Soot started on Wed Apr 15 23:12:52 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners(Instrument.java:139)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:36)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+NOOK.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners%28Instrument.java%3A139%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A36%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


OfficeSuite.apk
Soot started on Wed Apr 15 23:12:59 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners(Instrument.java:139)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:36)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+OfficeSuite.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeOpeners%28Instrument.java%3A139%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A36%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


OneNote.apk
Soot started on Wed Apr 15 23:14:20 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.microsoft.office.msohttp.k: void <init>(com.microsoft.office.msohttp.HRDActivity)>($r0)
SOURCE: 
	<com.microsoft.office.msohttp.HRDActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.microsoft.office.lensactivitycore.bn: void <init>(com.microsoft.office.lensactivitycore.OfficeLensActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r4, $r7)
SOURCE: 
	<com.microsoft.office.lensactivitycore.OfficeLensActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.microsoft.office.lensactivitycore.ca: void <init>(com.microsoft.office.lensactivitycore.ProcessActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r6, $r3)
SOURCE: 
	<com.microsoft.office.lensactivitycore.ProcessActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.microsoft.office.onenote.ui.a$g: void <init>()>()
SOURCE: 
	<com.microsoft.office.onenote.ui.ONMSplashActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.microsoft.office.onenote.ui.navigation.aa: void <init>(com.microsoft.office.onenote.ui.navigation.ONMNavigationActivity)>($r0)
SOURCE: 
	<com.microsoft.office.onenote.ui.navigation.ONMNavigationActivity: void onMAMResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.x: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.i: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.listeners.a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.tasks.l: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.m: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.microsoft.office.onenote.ui.firstrun.x: void <init>(com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.microsoft.office.onenote.ui.firstrun.n: void <init>(com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, $z0)
SOURCE: 
	<com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity: void a(java.lang.String,java.lang.String,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.microsoft.office.onenote.ui.firstrun.z: void <init>(com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity: void b(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.microsoft.office.onenote.ui.firstrun.o: void <init>(com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity)>($r0)
SOURCE: 
	<com.microsoft.office.onenote.ui.firstrun.ONMSignInWrapperActivity: void l()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.n: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.o: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.a: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.microsoft.office.onenote.ui.ad: void <init>(com.microsoft.office.onenote.ui.ONMBaseNotebookSettingActivity)>($r0)
SOURCE: 
	<com.microsoft.office.onenote.ui.ONMBaseNotebookSettingActivity: void a(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.microsoft.office.onenote.ui.ONMUpgradeActivity$a: void <init>(com.microsoft.office.onenote.ui.ONMUpgradeActivity,com.microsoft.office.onenote.ui.gc)>($r0, null)
SOURCE: 
	<com.microsoft.office.onenote.ui.ONMUpgradeActivity: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.e: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:15:07 EDT 2020
Soot has run for 0 min. 47 sec.
Exception in thread "main" java.lang.RuntimeException: no superclass for com.microsoft.office.onenote.ui.ONMSearchActivity
	at soot.SootClass.getSuperclass(SootClass.java:893)
	at soot.jimple.toolkits.typing.fast.BytecodeHierarchy.buildAncestryTree(BytecodeHierarchy.java:76)
	at soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas_(BytecodeHierarchy.java:170)
	at soot.jimple.toolkits.typing.fast.BytecodeHierarchy.lcas(BytecodeHierarchy.java:288)
	at soot.jimple.toolkits.typing.fast.TypeResolver.applyAssignmentConstraints(TypeResolver.java:511)
	at soot.jimple.toolkits.typing.fast.TypeResolver.inferTypes(TypeResolver.java:144)
	at soot.jimple.toolkits.typing.TypeAssigner.internalTransform(TypeAssigner.java:121)
	at soot.BodyTransformer.transform(BodyTransformer.java:55)
	at soot.BodyTransformer.transform(BodyTransformer.java:59)
	at soot.dexpler.DexBody.jimplify(DexBody.java:660)
	at soot.dexpler.DexMethod$1.getBody(DexMethod.java:119)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processNewMethod(OnFlyCallGraphBuilder.java:764)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processReachables(OnFlyCallGraphBuilder.java:273)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.build(CallGraphBuilder.java:111)
	at soot.jimple.toolkits.callgraph.CHATransformer.internalTransform(CHATransformer.java:51)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.RadioScenePack.internalApply(RadioScenePack.java:68)
	at soot.jimple.toolkits.callgraph.CallGraphPack.internalApply(CallGraphPack.java:58)
	at soot.Pack.apply(Pack.java:117)
	at soot.jimple.infoflow.android.SetupApplication.constructCallgraphInternal(SetupApplication.java:569)
	at soot.jimple.infoflow.android.SetupApplication.calculateCallbackMethods(SetupApplication.java:681)
	at soot.jimple.infoflow.android.SetupApplication.calculateCallbacks(SetupApplication.java:480)
	at soot.jimple.infoflow.android.SetupApplication.calculateCallbacks(SetupApplication.java:450)
	at soot.jimple.infoflow.android.SetupApplication.processEntryPoint(SetupApplication.java:1448)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1414)
	at soot.jimple.infoflow.android.SetupApplication.constructCallgraph(SetupApplication.java:1258)
	at com.guitard0g.dataflow_analysis.App.main(App.java:46)


Photos.apk
Soot started on Wed Apr 15 23:15:24 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<affn: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<affi: void a(afge)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<affn: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<affi: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<affe: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<afez: void a(afge)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<affe: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<afez: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<amtq: void <init>(java.lang.ref.WeakReference)>($r2)
SOURCE: 
	<amtl: void a(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<amtq: void <init>(java.lang.ref.WeakReference)>($r1)
SOURCE: 
	<amtl: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<aan: void <init>(aal,int)>($r0, $i1)
SOURCE: 
	<aal: void <init>(android.content.Context,char)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<dbp: void <init>(dbn,int,csj,int,int)>($r0, $i3, $r2, $i0, $i1)
SOURCE: 
	<dbn: boolean a(java.util.concurrent.Executor,csj,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<jtr: void <init>(android.content.Context,jtq)>($r1, $r3)
SOURCE: 
	<com.google.android.apps.photos.daydream.DreamViewFlipper: void a(android.content.Context)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<jtn: void <init>(com.google.android.apps.photos.daydream.DreamViewFlipper)>($r0)
SOURCE: 
	<com.google.android.apps.photos.daydream.DreamViewFlipper: void a(igj)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<jtr: void <init>(android.content.Context,jtq)>($r0, $r11)
SOURCE: 
	<com.google.android.apps.photos.daydream.DreamSettingsActivity: void c(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<jtr: void <init>(android.content.Context,jtq)>($r0, $r6)
SOURCE: 
	<com.google.android.apps.photos.daydream.DreamSettingsActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<aapy: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void a(brl)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<aapt: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<aaqb: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void g()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<aapu: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r34.<aapu: void <init>(com.google.android.libraries.abuse.reporting.ReportAbuseActivity)>($r0)
SOURCE: 
	<com.google.android.libraries.abuse.reporting.ReportAbuseActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<lyb: void <init>(android.content.Context)>($r0)
SOURCE: 
	<com.google.android.apps.photos.home.HomeActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>($r4)
SOURCE: 
	<btg: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r17.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10)
SOURCE: 
	<com.google.android.libraries.social.ingest.IngestActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:16:39 EDT 2020
Soot has run for 1 min. 14 sec.
==========================(Potential Leaks)==============================


Pinterest.apk
Soot started on Wed Apr 15 23:17:39 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.pinterest.activity.library.view.LibraryShowcaseView$a: void <init>(com.pinterest.activity.library.view.LibraryShowcaseView,byte)>($r0, 0)
SOURCE: 
	<com.pinterest.activity.library.view.LibraryShowcaseView: void a(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.pinterest.activity.webhook.WebhookActivity: void a(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.pinterest.activity.pin.view.PinCloseUpWebImageView: void a(com.pinterest.api.model.bq$c)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.pinterest.ui.d.a$a: void <init>(android.app.Activity,int,com.pinterest.ui.d.b,com.pinterest.ui.d.a$a$a)>($r0, $i0, $r1, $r2)
SOURCE: 
	<com.pinterest.activity.create.CameraActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9)
SOURCE: 
	<com.pinterest.feature.pin.closeup.view.bc: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16)
SOURCE: 
	<com.pinterest.feature.pin.closeup.view.z: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.pinterest.common.a.c$a: void <init>(com.pinterest.common.a.c,byte)>($r5, 0)
SOURCE: 
	<com.pinterest.kit.activity.a: void onPause()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.pinterest.base.ApplicationInfo$1: void <init>(com.pinterest.base.ApplicationInfo)>($r8)
SOURCE: 
	<com.pinterest.kit.activity.a: void onPause()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.pinterest.ui.menu.SpringLinearLayout$1: void <init>(com.pinterest.ui.menu.SpringLinearLayout)>($r0)
SOURCE: 
	<com.pinterest.ui.menu.SpringLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:18:28 EDT 2020
Soot has run for 0 min. 48 sec.
==========================(Potential Leaks)==============================


Quizlet.apk
Soot started on Wed Apr 15 23:19:02 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.kk: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.jn: void f()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:19:44 EDT 2020
Soot has run for 0 min. 42 sec.
==========================(Potential Leaks)==============================


realtorcom.apk
Soot started on Wed Apr 15 23:20:23 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4)
SOURCE: 
	<com.move.realtor.notification.activity.GenerateNotificationActivity: void lambda$onCreate$2$GenerateNotificationActivity(android.view.View)>
PATH TO SOURCE METHOD: 
	0: <com.move.hammerlytics.documentation.GenerateDocs: void main(java.lang.String[])>
	1: <rx.internal.operators.BlockingOperatorToIterator$SubscriberIterator: boolean hasNext()>
	2: <rx.Subscriber: void request(long)>
	3: <rx.internal.operators.OnSubscribeRedo$5: void request(long)>
	4: <rx.android.schedulers.LooperScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0)>
	5: <rx.android.schedulers.LooperScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>
	6: <android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void handleMessage(android.os.Message)>
	7: <com.github.chrisbanes.photoview.PhotoViewAttacher$2: boolean onSingleTapConfirmed(android.view.MotionEvent)>
	8: <com.move.realtor.notification.activity.GenerateNotificationActivity$$Lambda$1: void onClick(android.view.View)>
	9: <com.move.realtor.notification.activity.GenerateNotificationActivity: void lambda$onCreate$2$GenerateNotificationActivity(android.view.View)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzalg: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzakk: void f()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:21:51 EDT 2020
Soot has run for 1 min. 27 sec.
==========================(Potential Leaks)==============================


Sing.apk
Soot started on Wed Apr 15 23:22:46 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r18.<com.smule.singandroid.task.InitAppTask: void <init>(android.app.Activity)>($r0)
SOURCE: 
	<com.smule.singandroid.BaseActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.zzw: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzc: void zznj()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.util.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.util.q: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.mopub.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.mopub.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.smule.singandroid.task.LoginTask: void <init>(android.app.Activity,com.smule.singandroid.task.LoginTask$LoginTaskListener,java.lang.String,java.lang.String)>($r0, $r0, $r2, $r7)
SOURCE: 
	<com.smule.singandroid.registration.LoginActivity: void u()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.unity3d.ads.video.VideoPlayerView$2: void <init>(com.unity3d.ads.video.VideoPlayerView)>($r0)
SOURCE: 
	<com.unity3d.ads.video.VideoPlayerView: void startPrepareTimer(long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.unity3d.ads.video.VideoPlayerView$1: void <init>(com.unity3d.ads.video.VideoPlayerView)>($r0)
SOURCE: 
	<com.unity3d.ads.video.VideoPlayerView: void startVideoProgressTimer()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.smule.singandroid.task.PreDownloadArrangementTask: void <init>(com.smule.android.songbook.ArrangementVersionLiteEntry,com.smule.singandroid.task.PreDownloadArrangementTask$DownloadListener)>($r1, $r6)
SOURCE: 
	<com.smule.singandroid.pre_sing.PreSingActivity: void a(com.smule.android.songbook.ArrangementVersionLiteEntry,java.lang.Runnable)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.smule.singandroid.task.SongDownloadTask: void <init>(android.content.Context,com.smule.android.songbook.SongbookEntry,com.smule.android.logging.Analytics$UserPath)>($r0, $r1, $r5)
SOURCE: 
	<com.smule.singandroid.pre_sing.PreSingActivity: void a(com.smule.android.songbook.SongbookEntry)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.smule.singandroid.ReviewActivity$AsyncLatencyEstimator: void <init>(java.lang.ref.WeakReference,java.lang.String,java.lang.String)>($r4, $r1, $r2)
SOURCE: 
	<com.smule.singandroid.ReviewActivity: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.smule.singandroid.ReviewActivity$RebufferAudioTask: void <init>(com.smule.singandroid.ReviewActivity,boolean,boolean,boolean,boolean,com.smule.singandroid.ReviewActivity$1)>($r0, $z0, $z1, $z2, $z3, null)
SOURCE: 
	<com.smule.singandroid.ReviewActivity: void a(boolean,boolean,boolean,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r43.<com.smule.singandroid.ReviewActivity$WaveformAndAudioPowerTask: void <init>(com.smule.singandroid.ReviewActivity,boolean,boolean,java.lang.String,java.lang.String,float,int,int,com.smule.singandroid.ReviewActivity$1)>($r0, $z1, $z0, $r1, $r3, $f0, $i0, 2048, null)
SOURCE: 
	<com.smule.singandroid.ReviewActivity: void e()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.smule.singandroid.SingActivity$SaveRecordingTask: void <init>(com.smule.singandroid.SingActivity,com.smule.singandroid.SingActivity$1)>($r0, null)
SOURCE: 
	<com.smule.singandroid.SingActivity: void h(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.smule.singandroid.SingActivity$UiAudioLoop: void <init>(com.smule.singandroid.SingActivity)>($r0)
SOURCE: 
	<com.smule.singandroid.SingActivity: com.smule.singandroid.SingActivity$UiAudioLoop v()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.smule.singandroid.SingVideoActivity$VideoUiAudioLoop: void <init>(com.smule.singandroid.SingVideoActivity)>($r0)
SOURCE: 
	<com.smule.singandroid.SingVideoActivity: com.smule.singandroid.SingActivity$UiAudioLoop v()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.inmobi.rendering.mraid.b: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.String,com.inmobi.rendering.RenderView)>($r1, $r11, $r3, $r2, $r0)
SOURCE: 
	<com.inmobi.rendering.RenderView: void c(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.smule.android.twitter.TwitterOAuthView$TwitterOAuthTask: void <init>(com.smule.android.twitter.TwitterOAuthView,com.smule.android.twitter.TwitterOAuthView$1)>($r0, null)
SOURCE: 
	<com.smule.android.twitter.TwitterOAuthView: void a(java.lang.String,java.lang.String,java.lang.String,boolean,com.smule.android.twitter.TwitterOAuthView$Listener)>
NO PATH TO SOURCE METHOD FOUND.
java.lang.RuntimeException: Attempting to add method void b__SET_NULL__48(com.jirbo.adcolony.v) to class com.jirbo.adcolony.v, but the class already has a method with that signature.
	at soot.SootClass.addMethod(SootClass.java:722)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:46)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.lang.RuntimeException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Sing.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.lang.RuntimeException%3A+Attempting+to+add+method+void+b__SET_NULL__48%28com.jirbo.adcolony.v%29+to+class+com.jirbo.adcolony.v%2C+but+the+class+already+has+a+method+with+that+signature.%0A%09at+soot.SootClass.addMethod%28SootClass.java%3A722%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A46%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Sketch.apk
Soot started on Wed Apr 15 23:23:30 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.sonymobile.sketch.content.RemoveDetailsCacheTask: void <init>(android.content.Context)>($r2)
SOURCE: 
	<com.sonymobile.sketch.SketchEditorActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.k.r: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.c.b.g: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.sonymobile.sketch.content.RemoveDetailsCacheTask: void <init>(android.content.Context)>($r2)
SOURCE: 
	<com.sonymobile.sketch.content.ExternalStoreActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.j: void setImageUrl(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r5)
SOURCE: 
	<com.facebook.ads.internal.view.m: void setUpContent(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.sonymobile.sketch.content.RemoveDetailsCacheTask: void <init>(android.content.Context)>($r2)
SOURCE: 
	<com.sonymobile.sketch.content.StoreActivity: void onDestroy()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.k.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.sonymobile.sketch.content.ShowContentDispatcherActivity$2: void <init>(com.sonymobile.sketch.content.ShowContentDispatcherActivity)>($r0)
SOURCE: 
	<com.sonymobile.sketch.content.ShowContentDispatcherActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r4)
SOURCE: 
	<com.facebook.ads.internal.view.b.d: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.sonymobile.sketch.login.LoginActivity$SNEIAuthenticationTask: void <init>(com.sonymobile.sketch.login.LoginActivity,java.lang.String)>($r0, $r2)
SOURCE: 
	<com.sonymobile.sketch.login.LoginActivity: void handleNPAMAuthenticationFinished(android.content.Intent,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.sonymobile.sketch.preview.LocalSketchPreviewActivity$6: void <init>(com.sonymobile.sketch.preview.LocalSketchPreviewActivity,long)>($r0, $l0)
SOURCE: 
	<com.sonymobile.sketch.preview.LocalSketchPreviewActivity: void duplicate()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.sonymobile.sketch.preview.LocalSketchPreviewActivity$4: void <init>(com.sonymobile.sketch.preview.LocalSketchPreviewActivity,com.sonymobile.sketch.preview.PreviewActivity$PreviewSketchItem,com.sonymobile.sketch.preview.PreviewActivity$PreviewLoadListener)>($r0, $r1, $r2)
SOURCE: 
	<com.sonymobile.sketch.preview.LocalSketchPreviewActivity: void loadFullPreviewImage(com.sonymobile.sketch.preview.PreviewActivity$PreviewSketchItem,com.sonymobile.sketch.preview.PreviewActivity$PreviewLoadListener)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.sonymobile.sketch.preview.LocalSketchPreviewActivity$5: void <init>(com.sonymobile.sketch.preview.LocalSketchPreviewActivity,long,com.sonymobile.sketch.preview.LocalSketchPreviewActivity$ImageAction)>($r0, $l0, $r1)
SOURCE: 
	<com.sonymobile.sketch.preview.LocalSketchPreviewActivity: void saveImage(com.sonymobile.sketch.preview.LocalSketchPreviewActivity$ImageAction)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.sonymobile.sketch.preview.LocalSketchPreviewActivity$3: void <init>(com.sonymobile.sketch.preview.LocalSketchPreviewActivity,com.sonymobile.sketch.preview.PreviewActivity$PreviewSketchItem,android.graphics.Bitmap,com.sonymobile.sketch.preview.PreviewActivity$PreviewLoadListener)>($r0, $r2, $r3, $r1)
SOURCE: 
	<com.sonymobile.sketch.preview.LocalSketchPreviewActivity: void lambda$loadPreviewImage$4$LocalSketchPreviewActivity(com.sonymobile.sketch.preview.PreviewActivity$PreviewLoadListener,com.sonymobile.sketch.preview.PreviewActivity$PreviewSketchItem,android.graphics.Bitmap)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.sonymobile.sketch.login.AuthenticationTask: void <init>(com.sonymobile.sketch.login.AuthResult,com.sonymobile.sketch.login.AuthenticationTask$MigrationState,java.lang.String,com.sonymobile.sketch.login.AuthenticationTask$AuthenticationListener)>($r1, $r4, $r3, $r7)
SOURCE: 
	<com.sonymobile.sketch.login.migrate.MigrateActivity: void startTokenAuthentication(com.sonymobile.sketch.login.AuthResult)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.sonymobile.sketch.login.AuthenticationTask: void <init>(com.sonymobile.sketch.login.AuthResult,com.sonymobile.sketch.login.AuthenticationTask$AuthenticationListener)>($r1, $r7)
SOURCE: 
	<com.sonymobile.sketch.login.migrate.MigrateActivity: void startTokenAuthentication(com.sonymobile.sketch.login.AuthResult)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.sonymobile.sketch.feed.FeedPreviewLaunchActivity$1: void <init>(com.sonymobile.sketch.feed.FeedPreviewLaunchActivity,android.net.Uri,android.app.Activity)>($r0, $r8, $r0)
SOURCE: 
	<com.sonymobile.sketch.feed.FeedPreviewLaunchActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.sonymobile.sketch.dashboard.DashboardActivity$25: void <init>(com.sonymobile.sketch.dashboard.DashboardActivity)>($r0)
SOURCE: 
	<com.sonymobile.sketch.dashboard.DashboardActivity: void checkForMessagePrompt()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.sonymobile.sketch.dashboard.DashboardActivity$26: void <init>(com.sonymobile.sketch.dashboard.DashboardActivity,android.net.Uri,android.app.Activity)>($r0, $r3, $r0)
SOURCE: 
	<com.sonymobile.sketch.dashboard.DashboardActivity: void checkForPublishedCampaign()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.sonymobile.sketch.dashboard.DashboardActivity$24: void <init>(com.sonymobile.sketch.dashboard.DashboardActivity,android.content.Context,com.sonymobile.sketch.utils.Settings)>($r0, $r3, $r2)
SOURCE: 
	<com.sonymobile.sketch.dashboard.DashboardActivity: void checkForUpdates()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.sonymobile.sketch.dashboard.DashboardActivity$18: void <init>(com.sonymobile.sketch.dashboard.DashboardActivity)>($r0)
SOURCE: 
	<com.sonymobile.sketch.dashboard.DashboardActivity: void handleSketchSaved()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.sonymobile.sketch.dashboard.DashboardActivity$SendShareIntentTask: void <init>(com.sonymobile.sketch.dashboard.DashboardActivity,com.sonymobile.sketch.dashboard.DashboardActivity$1)>($r0, null)
SOURCE: 
	<com.sonymobile.sketch.dashboard.DashboardActivity: void startShareTask(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:24:04 EDT 2020
Soot has run for 0 min. 34 sec.
==========================(Potential Leaks)==============================


Speedometer.apk
Soot started on Wed Apr 15 23:24:33 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.facebook.ads.internal.view.b.d: void <init>(com.facebook.ads.internal.view.b.b)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.e.c.g: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.h: void setImageUrl(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r5)
SOURCE: 
	<com.facebook.ads.internal.view.k: void setUpContent(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzfE()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.speedometer.base.SplashActivity$1: void <init>(com.speedometer.base.SplashActivity)>($r0)
SOURCE: 
	<com.speedometer.base.SplashActivity: void Open_Activity()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.d: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r9)
SOURCE: 
	<com.facebook.ads.internal.view.d.a: void setInfo(com.facebook.ads.internal.adapters.ad)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.facebook.ads.internal.view.b.d: void <init>(android.widget.ImageView)>($r5)
SOURCE: 
	<com.facebook.ads.internal.view.c.c: void a(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:25:08 EDT 2020
Soot has run for 0 min. 34 sec.
==========================(Potential Leaks)==============================


Spotify.apk
Soot started on Wed Apr 15 23:25:46 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<mcu: void <init>(com.spotify.mobile.android.ui.activity.DeleteCacheAndSettingsConfirmationActivity,java.io.File,java.io.File)>($r0, $r10, $r2)
SOURCE: 
	<com.spotify.mobile.android.ui.activity.DeleteCacheAndSettingsConfirmationActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView$a: void <init>(com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView,com.bosch.myspin.serversdk.uielements.MySpinKeyboardButton)>($r0, $r1)
SOURCE: 
	<com.bosch.myspin.serversdk.uielements.MySpinKeyboardBaseView: void a(com.bosch.myspin.serversdk.uielements.MySpinKeyboardButton)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<bjo: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void c(com.facebook.ads.AudienceNetworkActivity)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<bjh: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<bkp: void a(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<dnc: void <init>(android.content.Context)>($r5)
SOURCE: 
	<dmf: void j()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:26:48 EDT 2020
Soot has run for 1 min. 2 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: android.app.Activity a>
SOURCE: 
	<com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: void setActivity(android.app.Activity)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <com.spotify.music.SpotifyApplication: void onCreate()>
	2: <android.os.Handler: boolean post(java.lang.Runnable)>
	3: <com.bosch.myspin.serversdk.y$a$1: void run()>
	4: <com.bosch.myspin.serversdk.y: void c(com.bosch.myspin.serversdk.y)>
	5: <com.bosch.myspin.serversdk.y: void e()>
	6: <com.bosch.myspin.serversdk.z: void e()>
	7: <com.bosch.myspin.serversdk.z: void y()>
	8: <com.bosch.myspin.serversdk.maps.MySpinJavaScriptHandler: void setActivity(android.app.Activity)>


TED.apk
Soot started on Wed Apr 15 23:28:26 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.ads.interactivemedia.v3.impl.t$1: void <init>(com.google.ads.interactivemedia.v3.impl.t)>($r0)
SOURCE: 
	<com.google.ads.interactivemedia.v3.impl.t: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzfE()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:29:06 EDT 2020
Soot has run for 0 min. 40 sec.
==========================(Potential Leaks)==============================
PATH NOT CLOSED (POTENTIAL LEAK): 
Variable: 
	<com.leanplum.LeanplumActivityHelper: android.app.Activity b>
SOURCE: 
	<com.leanplum.LeanplumActivityHelper: void d(android.app.Activity)>
PATH TO SOURCE METHOD: 
	0: <dummyMainClass: void dummyMainMethod(java.lang.String[])>
	1: <dummyMainClass: com.ted.android.view.splash.SplashActivity dummyMainMethod_com_ted_android_view_splash_SplashActivity(android.content.Intent)>
	2: <com.ted.android.view.BaseActivity: void onResume()>
	3: <com.ted.android.analytics.LeanplumDelegate: void onResume(android.app.Activity)>
	4: <com.leanplum.LeanplumActivityHelper: void onResume()>
	5: <com.leanplum.LeanplumActivityHelper: void d(android.app.Activity)>


The Weather Chnl.apk
Soot started on Wed Apr 15 23:29:45 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.j: void setImageUrl(java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <android.support.v7.widget.GapWorker: void run()>
	7: <android.support.v7.widget.GapWorker: void prefetch(long)>
	8: <android.support.v7.widget.GapWorker: void flushTasksWithDeadline(long)>
	9: <android.support.v7.widget.GapWorker: void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long)>
	10: <android.support.v7.widget.GapWorker: android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long)>
	11: <android.support.v7.widget.RecyclerView$Recycler: android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long)>
	12: <android.support.v7.widget.RecyclerView$Recycler: boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long)>
	13: <android.support.v7.widget.RecyclerView$Adapter: void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)>
	14: <android.support.v7.widget.RecyclerView$Adapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)>
	15: <com.facebook.ads.internal.view.k: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)>
	16: <com.facebook.ads.internal.view.k: void a(com.facebook.ads.internal.view.k$b,int)>
	17: <com.facebook.ads.internal.view.j: void setImageUrl(java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r5)
SOURCE: 
	<com.facebook.ads.internal.view.m: void setUpContent(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.weather.personalization.profile.login.ProfileAsyncTask: void <init>(com.weather.personalization.profile.task.Task)>($r2)
SOURCE: 
	<com.weather.personalization.profile.login.LoginActivity: void tryLogin(java.lang.Object)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventLocationSearchView$EventSearchReceiver$1: void run()>
	7: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	8: <android.support.v7.widget.SearchView: void onSearchClicked()>
	9: <com.weather.personalization.profile.login.LoginActivity$4: void onClick(android.view.View)>
	10: <com.weather.personalization.profile.login.LoginActivity: void access$200(com.weather.personalization.profile.login.LoginActivity,java.lang.Object)>
	11: <com.weather.personalization.profile.login.LoginActivity: void tryLogin(java.lang.Object)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.comscore.streaming.m: void <init>(com.comscore.streaming.StreamSenseVideoView,long,java.util.HashMap)>($r0, $l0, $r1)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.comscore.streaming.m: void run()>
	7: <com.comscore.streaming.StreamSenseVideoView: void a(com.comscore.streaming.StreamSenseVideoView,java.util.HashMap)>
	8: <com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.comscore.streaming.n: void <init>(com.comscore.streaming.StreamSenseVideoView,long)>($r0, $l0)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void g()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.comscore.streaming.n: void run()>
	7: <com.comscore.streaming.StreamSenseVideoView: void d(com.comscore.streaming.StreamSenseVideoView)>
	8: <com.comscore.streaming.StreamSenseVideoView: void g()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.weather.commons.ups.ui.LoginActivity$LoginAccountTask: void <init>(com.weather.commons.ups.ui.LoginActivity,com.weather.dal2.ups.UserDetails,com.weather.commons.ups.facade.DsxAccount,com.weather.commons.ups.sdk.ProfileCallBack)>($r0, $r1, $r2, $r0)
SOURCE: 
	<com.weather.commons.ups.ui.LoginActivity: void login(com.weather.dal2.ups.UserDetails,com.weather.commons.ups.facade.DsxAccount)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.commons.ups.ui.LoginActivity$3: void run()>
	7: <com.weather.commons.ups.ui.LoginActivity: void access$900(com.weather.commons.ups.ui.LoginActivity,com.weather.dal2.ups.UserDetails,com.weather.commons.ups.facade.DsxAccount)>
	8: <com.weather.commons.ups.ui.LoginActivity: void login(com.weather.dal2.ups.UserDetails,com.weather.commons.ups.facade.DsxAccount)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.weather.commons.ups.ui.LoginActivity$GoogleAccessTokenFetchTask: void <init>(com.weather.commons.ups.ui.LoginActivity,com.weather.commons.ups.ui.LoginActivity$1)>($r0, null)
SOURCE: 
	<com.weather.commons.ups.ui.LoginActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r16.<java.lang.Thread: void <init>(java.lang.Runnable)>($r17)
SOURCE: 
	<com.androidplot.Plot: void init(android.content.Context,android.util.AttributeSet,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.k.r: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.facebook.ads.internal.c.b$1$2: void run()>
	7: <com.facebook.ads.NativeAd$1$1: void a()>
	8: <com.facebook.ads.NativeAd$1$1: void c()>
	9: <com.google.ads.mediation.facebook.FacebookAdapter$NativeListener: void onAdLoaded(com.facebook.ads.Ad)>
	10: <com.google.ads.mediation.facebook.FacebookAdapter$AppInstallMapper: void mapNativeAd(com.google.ads.mediation.facebook.FacebookAdapter$NativeAdMapperListener)>
	11: <com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.k.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.facebook.ads.internal.view.u$1: void run()>
	7: <com.facebook.ads.internal.h.r: void a(com.facebook.ads.internal.h.q)>
	8: <com.facebook.ads.internal.h.r: void b(com.facebook.ads.internal.h.q)>
	9: <com.facebook.ads.internal.view.n$2: void a(com.facebook.ads.internal.h.q)>
	10: <com.facebook.ads.internal.view.n$2: void a(com.facebook.ads.internal.view.c.a.d)>
	11: <com.facebook.ads.AudienceNetworkActivity$2: void a(java.lang.String,com.facebook.ads.internal.h.q)>
	12: <com.facebook.ads.AudienceNetworkActivity: void c(com.facebook.ads.AudienceNetworkActivity)>
	13: <com.facebook.ads.AudienceNetworkActivity: void b()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.c.b.g: void setImage(java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.facebook.ads.internal.c.b$1$2: void run()>
	7: <com.facebook.ads.internal.adapters.l$3: void a()>
	8: <com.facebook.ads.internal.adapters.l$3: void a(boolean)>
	9: <com.facebook.ads.internal.view.n: void <init>(android.content.Context,com.facebook.ads.internal.h.f,com.facebook.ads.internal.adapters.u,com.facebook.ads.internal.c.b)>
	10: <com.facebook.ads.internal.view.n: void setupPlugins(com.facebook.ads.internal.adapters.c)>
	11: <com.facebook.ads.internal.view.c.b.g: void setImage(java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.mopub.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r4, $r1, $i0)
SOURCE: 
	<com.mopub.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r14.<com.weather.Weather.flu.ReportIllnessV2Activity$5: void <init>(com.weather.Weather.flu.ReportIllnessV2Activity)>($r0)
SOURCE: 
	<com.weather.Weather.flu.ReportIllnessV2Activity: void reportIllness()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventLocationSearchView$EventSearchReceiver$1: void run()>
	7: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	8: <android.support.v7.widget.SearchView: void onSearchClicked()>
	9: <com.weather.Weather.flu.ReportIllnessV2Activity: void onClick(android.view.View)>
	10: <com.weather.Weather.flu.ReportIllnessV2Activity: void reportIllness()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r2, "wc-CheckUserLoginStatus")
SOURCE: 
	<com.weather.Weather.app.WeatherController: void checkAccountLoginStatus()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, "app-rater")
SOURCE: 
	<com.weather.Weather.app.WeatherController: boolean showNpsAppRater()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r8, "rnv-download")
SOURCE: 
	<com.weather.Weather.news.ui.RelatedNewsView: void setData(android.app.Activity,java.lang.String[])>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.mopub.volley.toolbox.ImageLoader$4: void run()>
	7: <com.mopub.nativeads.NativeImageHelper$1: void onResponse(com.mopub.volley.toolbox.ImageLoader$ImageContainer,boolean)>
	8: <com.mopub.nativeads.MoPubCustomEventNative$MoPubStaticNativeAd$1: void onImagesCached()>
	9: <com.mopub.nativeads.MoPubNative$3: void onNativeAdLoaded(com.mopub.nativeads.BaseNativeAd)>
	10: <com.mopub.nativeads.MoPubNative$1: void onNativeLoad(com.mopub.nativeads.NativeAd)>
	11: <com.mopub.nativeads.NativeAd: void destroy()>
	12: <com.mopub.nativeads.MoPubCustomEventVideoNative$MoPubVideoNativeAd: void destroy()>
	13: <com.mopub.nativeads.MoPubCustomEventVideoNative$MoPubVideoNativeAd: void cleanUpMediaLayout()>
	14: <com.mopub.nativeads.MediaLayout: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>
	15: <com.google.android.gms.internal.zzalr: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
	16: <com.google.android.gms.internal.zzalr: void zzrj()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.facebook.ads.internal.k.r: void <init>(android.widget.ImageView)>($r4)
SOURCE: 
	<com.facebook.ads.internal.view.b.d: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r12.<com.weather.Weather.flu.ReportIllnessActivity$5: void <init>(com.weather.Weather.flu.ReportIllnessActivity)>($r0)
SOURCE: 
	<com.weather.Weather.flu.ReportIllnessActivity: void reportIllness()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventLocationSearchView$EventSearchReceiver$1: void run()>
	7: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	8: <android.support.v7.widget.SearchView: void onSearchClicked()>
	9: <com.weather.Weather.flu.ReportIllnessActivity: void onClick(android.view.View)>
	10: <com.weather.Weather.flu.ReportIllnessActivity: void reportIllness()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<net.hockeyapp.android.PaintActivity$2: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r7)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void makeResult()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventsFeedModule$2: void run()>
	7: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	8: <net.hockeyapp.android.PaintActivity$1: void onClick(android.content.DialogInterface,int)>
	9: <net.hockeyapp.android.PaintActivity: void access$000(net.hockeyapp.android.PaintActivity)>
	10: <net.hockeyapp.android.PaintActivity: void makeResult()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.AttachmentView$1: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <net.hockeyapp.android.FeedbackActivity$3: void run()>
	7: <net.hockeyapp.android.FeedbackActivity: void configureFeedbackView(boolean)>
	8: <net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<net.hockeyapp.android.tasks.GetFileSizeTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void configureView()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.DownloadFileTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void createDownloadTask(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventsFeedModule$2: void run()>
	7: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	8: <net.hockeyapp.android.UpdateActivity$2: void onClick(android.content.DialogInterface,int)>
	9: <net.hockeyapp.android.UpdateActivity: void prepareDownload()>
	10: <net.hockeyapp.android.UpdateActivity: void startDownloadTask()>
	11: <net.hockeyapp.android.UpdateActivity: void startDownloadTask(java.lang.String)>
	12: <net.hockeyapp.android.UpdateActivity: void createDownloadTask(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.LoginTask: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void performAuthentication()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventLocationSearchView$EventSearchReceiver$1: void run()>
	7: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	8: <android.support.v7.widget.SearchView: void onSearchClicked()>
	9: <net.hockeyapp.android.LoginActivity$1: void onClick(android.view.View)>
	10: <net.hockeyapp.android.LoginActivity: void access$000(net.hockeyapp.android.LoginActivity)>
	11: <net.hockeyapp.android.LoginActivity: void performAuthentication()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.ParseFeedbackTask: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void createParseFeedbackTask(java.lang.String,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventsFeedModule$2: void run()>
	7: <net.hockeyapp.android.FeedbackActivity$FeedbackHandler: void handleMessage(android.os.Message)>
	8: <net.hockeyapp.android.FeedbackActivity: void access$700(net.hockeyapp.android.FeedbackActivity,java.lang.String,java.lang.String)>
	9: <net.hockeyapp.android.FeedbackActivity: void startParseFeedbackTask(java.lang.String,java.lang.String)>
	10: <net.hockeyapp.android.FeedbackActivity: void createParseFeedbackTask(java.lang.String,java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void sendFetchFeedback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.eventsfeed.view.EventLocationSearchView$EventSearchReceiver$1: void run()>
	7: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	8: <android.support.v7.widget.SearchView: void onSearchClicked()>
	9: <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	10: <net.hockeyapp.android.FeedbackActivity: void sendFetchFeedback(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.PaintView$1: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r2, "ssa-initAds")
SOURCE: 
	<com.weather.Weather.app.SplashScreenActivity: void startup()>
PATH TO SOURCE METHOD: 
	0: <com.newrelic.agent.android.util.AgentBuildOptionsReporter: void main(java.lang.String[])>
	1: <com.newrelic.agent.android.Agent: java.lang.String getBuildId()>
	2: <com.mapbox.mapboxsdk.style.functions.stops.IterableStops: java.lang.String toString()>
	3: <okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>
	4: <okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()>
	5: <okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)>
	6: <com.weather.Weather.app.SplashScreenActivity$StartupRunnable: void run()>
	7: <com.weather.Weather.app.SplashScreenActivity: void access$100(com.weather.Weather.app.SplashScreenActivity)>
	8: <com.weather.Weather.app.SplashScreenActivity: void startup()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.obf.hi$1: void <init>(com.google.obf.hi)>($r0)
SOURCE: 
	<com.google.obf.hi: void a()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:37:42 EDT 2020
Soot has run for 7 min. 57 sec.
==========================(Potential Leaks)==============================


Ticketmaster.apk
Soot started on Wed Apr 15 23:38:02 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<o.cjs: void <init>(boolean)>(0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.activity.MainActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<o.cjs: void <init>(boolean)>(0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.activity.MainActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.ticketmaster.android.shared.util.HashCashWorkerTask: void <init>(com.ticketmaster.android.shared.util.HashCashWorkerTask$HashCashListener,java.lang.String)>($r1, $r8)
SOURCE: 
	<com.ticketmaster.mobile.android.library.checkout.activity.TmIntegratedListingsActivity: void ॱʻ()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.EventDetailsAndFindTicketsCombinedActivity: void ˋ(o.axp)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.MyTicketsActivity: void ˋ(o.axp)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.internal.zzanl: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.internal.zzamp: void ˎ()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.livenation.ism.GLTextureView$ʼ: void <init>(java.lang.ref.WeakReference)>($r1)
SOURCE: 
	<com.livenation.ism.GLTextureView: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.livenation.ism.GLTextureView$ʼ: void <init>(java.lang.ref.WeakReference)>($r9)
SOURCE: 
	<com.livenation.ism.GLTextureView: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.ticketmaster.android.shared.FetchOAuthTask: void <init>(com.ticketmaster.android.shared.FetchOAuthListener)>($r0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.CheckoutWebViewActivity: void ˎˏ()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<o.cjs: void <init>(boolean)>(0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.LandingActivity: void ˊ(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r19.<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.LandingActivity$If: void <init>(com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.LandingActivity,java.util.Locale,com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.LandingActivity$1)>($r0, $r20, null)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.LandingActivity: void ˊ(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.ticketmaster.mobile.android.library.socialnetwork.TwitterLoginActivity$ˋ: void <init>(com.ticketmaster.mobile.android.library.socialnetwork.TwitterLoginActivity,java.lang.String,o.djs,o.djt)>($r0, $r3, $r1, $r2)
SOURCE: 
	<com.ticketmaster.mobile.android.library.socialnetwork.TwitterLoginActivity: void ˏ(o.djs,o.djt)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<o.cjs: void <init>(boolean)>(0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.OnTourWebView: void ˏ(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<o.cul: void <init>(java.lang.ref.WeakReference,java.lang.ref.WeakReference)>($r9, $r1)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.OnTourWebView: void ˏ(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<com.ticketmaster.android.shared.FetchOAuthTask: void <init>(com.ticketmaster.android.shared.FetchOAuthListener)>($r0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.OnTourWebView: void ˏ(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.RegistrationActivity$if: void <init>(com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.RegistrationActivity,java.lang.ref.WeakReference)>($r0, $r4)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.verifiedfan.RegistrationActivity: void ॱ(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<o.cjs: void <init>(boolean)>($z0)
SOURCE: 
	<com.ticketmaster.mobile.android.library.ui.activity.LocationSettingActivity: o.cjs ˏ(boolean)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:39:04 EDT 2020
Soot has run for 1 min. 1 sec.
==========================(Potential Leaks)==============================


Translate.apk
Soot started on Wed Apr 15 23:39:51 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<bav: void <init>(com.google.android.apps.translate.inputs.PhrasebookActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.google.android.apps.translate.inputs.PhrasebookActivity: void c(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<atw: void <init>()>()
SOURCE: 
	<dqs: void a(java.lang.Object)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<asw: void <init>(com.google.android.apps.translate.HomeListView)>($r0)
SOURCE: 
	<com.google.android.apps.translate.HomeListView: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r37.<bcq: void <init>(bcp,java.lang.Runnable,com.google.android.apps.translate.inputtools.InputToolsInput)>($r36, $r31, $r9)
SOURCE: 
	<com.google.android.apps.translate.inputs.KeyboardHandwritingActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<hbg: void <init>(android.app.Activity)>($r0)
SOURCE: 
	<com.google.userfeedback.android.api.UserFeedbackActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r16.<hbm: void <init>(com.google.userfeedback.android.api.UserFeedbackActivity,android.content.Context,android.widget.Spinner,android.widget.Button)>($r0, $r0, $r13, $r10)
SOURCE: 
	<com.google.userfeedback.android.api.UserFeedbackActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<enb: void <init>(emz)>($r11)
SOURCE: 
	<com.google.android.apps.translate.offline.OfflineManagerActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<azr: void <init>(com.google.android.apps.translate.inputs.CameraInputActivity,boolean)>($r0, 1)
SOURCE: 
	<com.google.android.apps.translate.inputs.CameraInputActivity: void F()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<azn: void <init>(com.google.android.apps.translate.inputs.CameraInputActivity)>($r0)
SOURCE: 
	<com.google.android.apps.translate.inputs.CameraInputActivity: void a(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<azp: void <init>(com.google.android.apps.translate.inputs.CameraInputActivity,elx)>($r0, $r1)
SOURCE: 
	<com.google.android.apps.translate.inputs.CameraInputActivity: void a(elx)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<bmj: void <init>(com.google.android.apps.unveil.textinput.TextInput,java.util.ArrayList)>($r4, $r10)
SOURCE: 
	<com.google.android.apps.translate.inputs.CameraInputActivity: void onPause()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:40:19 EDT 2020
Soot has run for 0 min. 27 sec.
==========================(Potential Leaks)==============================


TripAdvisor.apk
Soot started on Wed Apr 15 23:41:49 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r12.<com.linecorp.linesdk.auth.internal.c$a: void <init>(com.linecorp.linesdk.auth.internal.c,byte)>($r3, 0)
SOURCE: 
	<com.linecorp.linesdk.auth.internal.LineAuthenticationActivity: void onNewIntent(android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.linecorp.linesdk.auth.internal.c$c: void <init>(com.linecorp.linesdk.auth.internal.c,byte)>($r3, 0)
SOURCE: 
	<com.linecorp.linesdk.auth.internal.LineAuthenticationActivity: void onStart()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r11.<com.tripadvisor.tripadvisor.a$a: void <init>(com.tripadvisor.tripadvisor.a,byte)>($r2, 0)
SOURCE: 
	<com.tripadvisor.tripadvisor.TripAdvisorTripAdvisorActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.tripadvisor.android.timeline.views.TimeDisplayView$a: void <init>(com.tripadvisor.android.timeline.views.TimeDisplayView,android.os.Handler)>($r0, $r4)
SOURCE: 
	<com.tripadvisor.android.timeline.views.TimeDisplayView: void setDate(java.util.Date)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r16.<java.lang.Thread: void <init>(java.lang.Runnable)>(r15)
SOURCE: 
	<com.tripadvisor.android.lib.tamobile.poidetails.PoiDetailsActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.tripadvisor.android.timeline.activity.LocationChangeActivity$6: void <init>(com.tripadvisor.android.timeline.activity.LocationChangeActivity,boolean,com.tripadvisor.android.timeline.model.database.DBActivityGroup,android.content.Context)>($r0, $z0, $r1, $r0)
SOURCE: 
	<com.tripadvisor.android.timeline.activity.LocationChangeActivity: void a(com.tripadvisor.android.timeline.activity.LocationChangeActivity,com.tripadvisor.android.timeline.model.database.DBActivityGroup,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.tripadvisor.android.timeline.util.c$a: void <init>(android.app.Activity,java.lang.String)>($r0, $r3)
SOURCE: 
	<com.tripadvisor.android.timeline.activity.TimelineActivity: void g(com.tripadvisor.android.timeline.activity.TimelineActivity,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.tripadvisor.android.login.activities.SamsungMergeActivity$1: void <init>(com.tripadvisor.android.login.activities.SamsungMergeActivity)>($r0)
SOURCE: 
	<com.tripadvisor.android.login.activities.SamsungMergeActivity: void <init>()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.tripadvisor.android.lib.tamobile.onboarding.RebrandOnboardingActivity$a: void <init>(com.tripadvisor.android.lib.tamobile.onboarding.RebrandOnboardingActivity,byte)>($r0, 0)
SOURCE: 
	<com.tripadvisor.android.lib.tamobile.onboarding.RebrandOnboardingActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r19.<com.tripadvisor.android.lib.tamobile.helpers.m: void <init>(android.content.Context,com.tripadvisor.android.lib.tamobile.helpers.m$a)>($r8, $r0)
SOURCE: 
	<com.tripadvisor.android.lib.tamobile.activities.UserImagePickerActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.tripadvisor.android.lib.tamobile.helpers.m: void <init>(android.content.Context,com.tripadvisor.android.lib.tamobile.helpers.m$a)>($r6, $r0)
SOURCE: 
	<com.tripadvisor.android.lib.tamobile.activities.UserImagePickerActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.polites.android.b: void <init>(com.polites.android.GestureImageView,java.lang.String)>($r0, "GestureImageViewAnimator")
SOURCE: 
	<com.polites.android.GestureImageView: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.tripadvisor.android.lib.tamobile.activities.NeighborhoodOverviewActivity$3: void <init>(com.tripadvisor.android.lib.tamobile.activities.NeighborhoodOverviewActivity)>($r0)
SOURCE: 
	<com.tripadvisor.android.lib.tamobile.activities.NeighborhoodOverviewActivity: void h()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:42:46 EDT 2020
Soot has run for 0 min. 56 sec.
==========================(Potential Leaks)==============================


trivago.apk
Soot started on Wed Apr 15 23:43:20 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.PaintActivity$2: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <com.google.android.gms.internal.zzaap$zza$3: void run()>
	7: <com.google.android.gms.internal.zzaap$zza: void a(com.google.android.gms.common.ConnectionResult)>
	8: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	9: <net.hockeyapp.android.PaintActivity$1: void onClick(android.content.DialogInterface,int)>
	10: <net.hockeyapp.android.PaintActivity: void a(net.hockeyapp.android.PaintActivity)>
	11: <net.hockeyapp.android.PaintActivity: void a()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.DownloadFileTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <com.google.android.gms.internal.zzaap$zza$3: void run()>
	7: <com.google.android.gms.internal.zzaap$zza: void a(com.google.android.gms.common.ConnectionResult)>
	8: <android.support.v7.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>
	9: <net.hockeyapp.android.UpdateActivity$2: void onClick(android.content.DialogInterface,int)>
	10: <net.hockeyapp.android.UpdateActivity: void g()>
	11: <net.hockeyapp.android.UpdateActivity: void d()>
	12: <net.hockeyapp.android.UpdateActivity: void a(java.lang.String)>
	13: <net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.tasks.GetFileSizeTask: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.DownloadFileListener)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.LoginTask: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void c()>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <android.support.v7.view.menu.CascadingMenuPopup$2$1: void run()>
	7: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>
	8: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int)>
	9: <android.support.v7.view.menu.MenuItemImpl: boolean expandActionView()>
	10: <android.support.v7.view.menu.MenuBuilder: boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl)>
	11: <android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl)>
	12: <android.support.v7.widget.SearchView: void onActionViewExpanded()>
	13: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	14: <android.support.v7.widget.SearchView: void onSearchClicked()>
	15: <net.hockeyapp.android.LoginActivity$1: void onClick(android.view.View)>
	16: <net.hockeyapp.android.LoginActivity: void a(net.hockeyapp.android.LoginActivity)>
	17: <net.hockeyapp.android.LoginActivity: void c()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.AttachmentView$1: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <net.hockeyapp.android.FeedbackActivity$2: void run()>
	7: <net.hockeyapp.android.FeedbackActivity: void b(boolean)>
	8: <net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.PaintView$1: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.google.android.gms.ads.internal.overlay.zzy: void <init>(android.content.Context)>($r6)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void h()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.ParseFeedbackTask: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <com.google.android.gms.internal.zzaap$zza$3: void run()>
	7: <com.google.android.gms.internal.zzaap$zza: void a(com.google.android.gms.common.ConnectionResult)>
	8: <net.hockeyapp.android.FeedbackActivity$FeedbackHandler: void handleMessage(android.os.Message)>
	9: <net.hockeyapp.android.FeedbackActivity: void a(net.hockeyapp.android.FeedbackActivity,java.lang.String,java.lang.String)>
	10: <net.hockeyapp.android.FeedbackActivity: void b(java.lang.String,java.lang.String)>
	11: <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.SendFeedbackTask: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
PATH TO SOURCE METHOD: 
	0: <org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])>
	1: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
	2: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>
	3: <com.annimon.stream.iterator.LsaExtIterator: java.lang.Object next()>
	4: <com.annimon.stream.operator.ObjFlatMap: void a()>
	5: <com.annimon.stream.Stream: void close()>
	6: <android.support.v7.view.menu.CascadingMenuPopup$2$1: void run()>
	7: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>
	8: <android.support.v7.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int)>
	9: <android.support.v7.view.menu.MenuItemImpl: boolean expandActionView()>
	10: <android.support.v7.view.menu.MenuBuilder: boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl)>
	11: <android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl)>
	12: <android.support.v7.widget.SearchView: void onActionViewExpanded()>
	13: <android.support.v7.widget.SearchView: void setIconified(boolean)>
	14: <android.support.v7.widget.SearchView: void onSearchClicked()>
	15: <net.hockeyapp.android.FeedbackActivity: void onClick(android.view.View)>
	16: <net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
Soot finished on Wed Apr 15 23:44:38 EDT 2020
Soot has run for 1 min. 17 sec.
==========================(Potential Leaks)==============================


UC Browser.apk
Soot started on Wed Apr 15 23:45:22 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8)
SOURCE: 
	<com.uc.aerie.updater.test.AerieUpdaterTestActivity: void a(com.uc.aerie.updater.test.AerieUpdaterTestActivity,android.os.Message)>
PATH TO SOURCE METHOD: 
	0: <org.jsoup.examples.HtmlToPlainText: void main(java.lang.String[])>
	1: <org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>
	2: <org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>
	3: <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document a(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>
	4: <org.jsoup.parser.Parser: org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String)>
	5: <org.jsoup.parser.dd: org.jsoup.nodes.Document a(java.lang.String,java.lang.String,org.jsoup.parser.ac)>
	6: <org.jsoup.parser.dd: void bE()>
	7: <org.jsoup.parser.XmlTreeBuilder: boolean a(org.jsoup.parser.al)>
	8: <org.jsoup.parser.de: void <clinit>()>
	9: <org.jsoup.parser.ak: org.jsoup.parser.ak[] values()>
	10: <com.uc.base.d.f.d: java.lang.Object clone()>
	11: <com.uc.base.d.f.d: com.uc.base.d.f.k rg()>
	12: <com.uc.base.d.f.k: java.lang.String getDescriptor()>
	13: <com.uc.webview.export.internal.cd.b: java.lang.String toString()>
	14: <com.uc.webview.export.internal.utility.Log: void d(java.lang.String,java.lang.String)>
	15: <com.uc.webview.export.cyclone.UCLogger: void print(java.lang.String,java.lang.Throwable[])>
	16: <com.uc.webview.export.cyclone.UCLogger$1: java.lang.Object doInBackground(java.lang.Object[])>
	17: <com.uc.webview.export.internal.cd.l$a: void onReceiveValue(java.lang.Object)>
	18: <com.uc.aerie.updater.test.a: void handleMessage(android.os.Message)>
	19: <com.uc.aerie.updater.test.AerieUpdaterTestActivity: void a(com.uc.aerie.updater.test.AerieUpdaterTestActivity,android.os.Message)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.uc.media.interfaces.PosterView$DrawThread: void <init>(java.lang.String,com.uc.media.interfaces.PosterView)>($r8, $r0)
SOURCE: 
	<com.uc.media.interfaces.PosterView: void setFrameData(java.util.List)>
Soot has run out of the memory allocated to it by the Java VM.
To allocate more memory to Soot, use the -Xmx switch to Java.
For example (for 2GB): java -Xmx2g soot.Main ...
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at com.guitard0g.dataflow_analysis.App.getMethodPath(App.java:146)
	at com.guitard0g.dataflow_analysis.Instrument.caseInvokeAsyncTask(Instrument.java:121)
	at com.guitard0g.dataflow_analysis.Instrument$2.caseInvokeStmt(Instrument.java:95)
	at soot.jimple.internal.JInvokeStmt.apply(JInvokeStmt.java:91)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:92)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


WatchESPN.apk
Soot started on Wed Apr 15 23:47:37 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.libraries.cast.companionlibrary.widgets.MiniController$7: void <init>(com.google.android.libraries.cast.companionlibrary.widgets.MiniController)>($r0)
SOURCE: 
	<com.google.android.libraries.cast.companionlibrary.widgets.MiniController: void setUpcomingIcon(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.libraries.cast.companionlibrary.widgets.MiniController$6: void <init>(com.google.android.libraries.cast.companionlibrary.widgets.MiniController)>($r0)
SOURCE: 
	<com.google.android.libraries.cast.companionlibrary.widgets.MiniController: void setIcon(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.espn.watchespn.player.cast.CastControllerActivity$1: void <init>(com.espn.watchespn.player.cast.CastControllerActivity,java.lang.String)>($r0, $r1)
SOURCE: 
	<com.espn.watchespn.player.cast.CastControllerActivity: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.zzap: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.zzd: void zzfE()>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:48:09 EDT 2020
Soot has run for 0 min. 31 sec.
==========================(Potential Leaks)==============================


Wattpad.apk
Soot started on Wed Apr 15 23:48:50 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.google.obf.hh$1: void <init>(com.google.obf.hh)>($r0)
SOURCE: 
	<com.google.obf.hh: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r14.<com.facebook.ads.internal.util.p: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r55.<wp.wattpad.create.d.myth: void <init>(android.app.Activity,wp.wattpad.internal.model.stories.MyStory)>($r0, $r12)
SOURCE: 
	<wp.wattpad.create.ui.activities.WriteActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.airbnb.lottie.r: void <init>(android.content.res.Resources,com.airbnb.lottie.as)>($r3, $r4)
SOURCE: 
	<com.airbnb.lottie.LottieAnimationView: void setAnimation(org.json.JSONObject)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.util.x: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b(com.facebook.ads.AudienceNetworkActivity)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.util.p: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.mopub.mobileads.VastVideoBlurLastVideoFrameTask: void <init>(android.media.MediaMetadataRetriever,android.widget.ImageView,int)>($r3, $r1, $i0)
SOURCE: 
	<com.mopub.mobileads.VastVideoView: void prepareBlurredLastVideoFrame(android.widget.ImageView,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.smaato.soma.internal.d.fable: void <init>()>()
SOURCE: 
	<com.smaato.soma.video.VASTAdActivity: void a(com.smaato.soma.video.VASTAdActivity,android.webkit.WebView,com.smaato.soma.internal.vast.adventure)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<wp.wattpad.authenticate.c.c.adventure: void <init>(android.app.Activity,wp.wattpad.util.image.autobiography,wp.wattpad.authenticate.c.a.adventure$anecdote,java.lang.String,java.lang.String,java.lang.String)>($r0, $r10, $r2, $r3, $r7, $r12)
SOURCE: 
	<wp.wattpad.onboarding.ui.activities.OnBoardingRequiredInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r12.<com.smaato.soma.internal.d.fable: void <init>(com.smaato.soma.comedy,com.smaato.soma.ak)>($r13, $r2)
SOURCE: 
	<com.smaato.soma.BaseView: boolean l()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<wp.wattpad.ui.activities.settings.AccountPreferencesActivity$anecdote: void <init>(wp.wattpad.ui.activities.settings.AccountPreferencesActivity,wp.wattpad.ui.activities.settings.AccountPreferencesActivity,wp.wattpad.ui.activities.settings.AccountPreferencesActivity$autobiography,java.lang.String[])>($r0, $r0, $r1, $r2)
SOURCE: 
	<wp.wattpad.ui.activities.settings.AccountPreferencesActivity: void a(wp.wattpad.ui.activities.settings.AccountPreferencesActivity$autobiography,java.lang.String[])>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<wp.wattpad.ui.activities.settings.AccountPreferencesActivity$article: void <init>(wp.wattpad.ui.activities.settings.AccountPreferencesActivity,wp.wattpad.ui.activities.settings.AccountPreferencesActivity,wp.wattpad.ui.activities.settings.AccountPreferencesActivity$autobiography,boolean,boolean,java.lang.String[],wp.wattpad.ui.activities.settings.description)>($r0, $r0, $r8, 1, $z0, $r1, null)
SOURCE: 
	<wp.wattpad.ui.activities.settings.AccountPreferencesActivity: void b(boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<wp.wattpad.ui.activities.settings.RootPreferencesActivity$anecdote: void <init>(wp.wattpad.ui.activities.settings.RootPreferencesActivity,int,wp.wattpad.ui.activities.settings.RootPreferencesActivity$anecdote$adventure)>($r0, $i0, $r1)
SOURCE: 
	<wp.wattpad.ui.activities.settings.RootPreferencesActivity: void a(wp.wattpad.ui.activities.settings.RootPreferencesActivity,int,wp.wattpad.ui.activities.settings.RootPreferencesActivity$anecdote$adventure)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke r18.<pl.droidsonroids.gif.GifTextureView$adventure: void <init>(pl.droidsonroids.gif.GifTextureView)>($r0)
SOURCE: 
	<pl.droidsonroids.gif.GifTextureView: void a(android.util.AttributeSet,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<pl.droidsonroids.gif.GifTextureView$adventure: void <init>(pl.droidsonroids.gif.GifTextureView)>($r0)
SOURCE: 
	<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.information)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<wp.wattpad.ui.autocompleteviews.biography: void <init>(wp.wattpad.ui.autocompleteviews.AutoCompleteMentionsListView,long,java.lang.String)>($r0, $l0, $r1)
SOURCE: 
	<wp.wattpad.ui.autocompleteviews.AutoCompleteMentionsListView: void a(java.lang.String,long)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<com.inmobi.rendering.mraid.b: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.String,com.inmobi.rendering.RenderView)>($r1, $r11, $r3, $r2, $r0)
SOURCE: 
	<com.inmobi.rendering.RenderView: void c(java.lang.String,java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.smaato.soma.internal.d.a.adventure: void <init>(java.lang.String)>($r2)
SOURCE: 
	<com.smaato.soma.internal.views.CustomWebView: void a(com.smaato.soma.d.drama,java.lang.String,java.util.List)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Wed Apr 15 23:49:35 EDT 2020
Soot has run for 0 min. 45 sec.
==========================(Potential Leaks)==============================


Waze.apk
Soot started on Wed Apr 15 23:50:09 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.abaltatech.wrapper.weblink.sdk.WLActivity$1: void <init>(com.abaltatech.wrapper.weblink.sdk.WLActivity)>($r0)
SOURCE: 
	<com.abaltatech.wrapper.weblink.sdk.WLActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.abaltatech.wrapper.weblink.sdk.widgets.WLGLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r1)
SOURCE: 
	<com.abaltatech.wrapper.weblink.sdk.widgets.WLGLSurfaceView: void onAttachedToWindow()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.abaltatech.wrapper.weblink.sdk.widgets.WLGLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r9)
SOURCE: 
	<com.abaltatech.wrapper.weblink.sdk.widgets.WLGLSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.waze.MainActivity$ProgressToast: void <init>(com.waze.MainActivity)>($r0)
SOURCE: 
	<com.waze.MainActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Waze.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


WEBTOON.apk
Soot started on Wed Apr 15 23:50:37 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.naver.linewebtoon.auth.c: void <init>(com.naver.linewebtoon.auth.GoogleLoginActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.auth.GoogleLoginActivity: void a(com.google.android.gms.auth.api.signin.GoogleSignInResult)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.common.d.a: void <init>(android.content.Context,com.naver.linewebtoon.common.d.b)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.download.DownloaderActivity: void a(int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r17.<com.naver.linewebtoon.download.f: void <init>(com.naver.linewebtoon.download.DownloaderActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.download.DownloaderActivity: void a(com.naver.linewebtoon.episode.list.model.EpisodeListResult)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.download.c: void <init>(com.naver.linewebtoon.download.DownloaderActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.download.DownloaderActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.naver.linewebtoon.splash.h: void <init>(com.naver.linewebtoon.splash.SplashActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.splash.SplashActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.naver.linewebtoon.title.translation.a: void <init>(com.naver.linewebtoon.title.translation.FanTranslatedTitlesActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.title.translation.FanTranslatedTitlesActivity: void m()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r18.<com.naver.linewebtoon.title.translation.a: void <init>(com.naver.linewebtoon.title.translation.FanTranslatedTitlesActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.title.translation.FanTranslatedTitlesActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.facebook.ads.internal.util.q: void <init>(com.facebook.ads.internal.view.e)>($r2)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void O()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.naver.linewebtoon.common.d.a: void <init>(android.content.Context,com.naver.linewebtoon.common.d.b)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void O()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.naver.linewebtoon.episode.list.k: void <init>(android.content.Context,com.naver.linewebtoon.episode.list.l)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void a(com.naver.linewebtoon.title.model.WebtoonTitle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r12.<com.naver.linewebtoon.episode.list.g: void <init>(com.naver.linewebtoon.episode.list.EpisodeListActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void a(com.naver.linewebtoon.title.model.WebtoonTitle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.list.h: void <init>(android.content.Context,com.naver.linewebtoon.episode.list.i)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<com.naver.linewebtoon.episode.list.e: void <init>(com.naver.linewebtoon.episode.list.EpisodeListActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.EpisodeListActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.naver.linewebtoon.episode.list.detail.b: void <init>(com.naver.linewebtoon.episode.list.detail.TitleInfoActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.detail.TitleInfoActivity: void a(com.naver.linewebtoon.title.model.WebtoonTitle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.naver.linewebtoon.common.d.a: void <init>(android.content.Context,com.naver.linewebtoon.common.d.b)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.detail.TitleInfoActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.naver.linewebtoon.episode.list.k: void <init>(android.content.Context,com.naver.linewebtoon.episode.list.l)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.ChallengeEpisodeListActivity: void b(com.naver.linewebtoon.episode.challenge.model.ChallengeTitleResult)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.list.h: void <init>(android.content.Context,com.naver.linewebtoon.episode.list.i)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.ChallengeEpisodeListActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.naver.linewebtoon.comment.i: void <init>(com.naver.linewebtoon.comment.CommentViewerActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.comment.CommentViewerActivity: void a(java.lang.String,java.lang.Integer)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.list.o: void <init>(com.naver.linewebtoon.episode.list.TranslatedEpisodeListActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.TranslatedEpisodeListActivity: void j_()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.naver.linewebtoon.episode.list.o: void <init>(com.naver.linewebtoon.episode.list.TranslatedEpisodeListActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.TranslatedEpisodeListActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.list.j: void <init>(android.content.Context,com.naver.linewebtoon.episode.list.i)>($r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.list.TranslatedEpisodeListActivity: void onResume()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.facebook.ads.internal.util.z: void <init>(java.util.Map)>($r4)
SOURCE: 
	<com.facebook.ads.AudienceNetworkActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r15.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16)
SOURCE: 
	<com.naver.linewebtoon.download.SubscribedDownloadActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r17.<com.naver.linewebtoon.download.n: void <init>(com.naver.linewebtoon.download.SubscribedDownloadActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.download.SubscribedDownloadActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.facebook.ads.internal.util.q: void <init>(android.widget.ImageView)>($r3)
SOURCE: 
	<com.facebook.ads.internal.view.d.b.f: void setImage(java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.naver.linewebtoon.auth.k: void <init>(com.naver.linewebtoon.auth.TwitterLoginActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.auth.TwitterLoginActivity: void onActivityResult(int,int,android.content.Intent)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.naver.linewebtoon.auth.j: void <init>(com.naver.linewebtoon.auth.TwitterLoginActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.auth.TwitterLoginActivity: void onCreate(android.os.Bundle)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.viewer.o: void <init>(com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity: void a(int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.naver.linewebtoon.episode.viewer.p: void <init>(com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity: void r()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.naver.linewebtoon.episode.viewer.r: void <init>(com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity,android.content.Context,com.naver.linewebtoon.common.d.b)>($r0, $r0, $r0)
SOURCE: 
	<com.naver.linewebtoon.episode.viewer.WebtoonViewerActivity: void r()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.viewer.k: void <init>(com.naver.linewebtoon.episode.viewer.ViewerActivity)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.viewer.ViewerActivity: void E()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r12.<com.nhn.android.neoid.NeoIdSdkManager$NeoIdGetTokenTask: void <init>()>()
SOURCE: 
	<com.nhn.android.neoid.ui.NeoIdTokenLoginActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.naver.linewebtoon.episode.viewer.horror.type4.HorrorType4ARView$2: void <init>(com.naver.linewebtoon.episode.viewer.horror.type4.HorrorType4ARView)>($r0)
SOURCE: 
	<com.naver.linewebtoon.episode.viewer.horror.type4.HorrorType4ARView: void f()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0)
SOURCE: 
	<com.naverlabs.webtoon.lib.BaseEffectViewActivity: void cancelVibrate()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0)
SOURCE: 
	<com.naverlabs.webtoon.lib.BaseEffectViewActivity: void vibrate(int)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+WEBTOON.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Wish.apk
Soot started on Wed Apr 15 23:51:13 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.contextlogic.wish.video.VideoPlayerView$1: void <init>(com.contextlogic.wish.video.VideoPlayerView)>($r0)
SOURCE: 
	<com.contextlogic.wish.video.VideoPlayerView: void setPlayer(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.SimpleExoPlayer$VideoListener)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.contextlogic.wish.ui.timer.BaseCountdownTimerView$2: void <init>(com.contextlogic.wish.ui.timer.BaseCountdownTimerView)>($r0)
SOURCE: 
	<com.contextlogic.wish.ui.timer.BaseCountdownTimerView: void startTimer()>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<com.contextlogic.wish.video.ControllableVideoPlayerView$1: void <init>(com.contextlogic.wish.video.ControllableVideoPlayerView)>($r0)
SOURCE: 
	<com.contextlogic.wish.video.ControllableVideoPlayerView: void setPlayer(com.google.android.exoplayer2.SimpleExoPlayer)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Wish.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Word.apk
Soot started on Wed Apr 15 23:51:34 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.microsoft.office.docsui.panes.SyncStatusPane$3: void <init>(com.microsoft.office.docsui.panes.SyncStatusPane)>($r0)
SOURCE: 
	<com.microsoft.office.docsui.panes.SyncStatusPane: void loadDocumentErrorsAync()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<com.microsoft.office.lensactivitycore.cj: void <init>(com.microsoft.office.lensactivitycore.OfficeLensActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r4, $r7)
SOURCE: 
	<com.microsoft.office.lensactivitycore.OfficeLensActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.microsoft.office.lensactivitycore.da: void <init>(com.microsoft.office.lensactivitycore.ProcessActivity,java.lang.String,com.microsoft.office.lensactivitycore.CommandTrace)>($r0, $r6, $r3)
SOURCE: 
	<com.microsoft.office.lensactivitycore.ProcessActivity: void saveImage()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.microsoft.office.docsui.panes.SyncStatusPanePhone$3: void <init>(com.microsoft.office.docsui.panes.SyncStatusPanePhone)>($r0)
SOURCE: 
	<com.microsoft.office.docsui.panes.SyncStatusPanePhone: void loadDocumentErrorsAync()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<net.hockeyapp.android.aa: void <init>(net.hockeyapp.android.PaintActivity,android.graphics.Bitmap)>($r0, $r6)
SOURCE: 
	<net.hockeyapp.android.PaintActivity: void a()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<net.hockeyapp.android.views.a: void <init>(net.hockeyapp.android.views.AttachmentView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.AttachmentView: void <init>(android.content.Context,android.view.ViewGroup,android.net.Uri,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.l: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r1, $r2)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void a(java.lang.String,net.hockeyapp.android.listeners.a)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<net.hockeyapp.android.tasks.o: void <init>(android.content.Context,java.lang.String,net.hockeyapp.android.listeners.a)>($r0, $r15, $r16)
SOURCE: 
	<net.hockeyapp.android.UpdateActivity: void b()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.tasks.p: void <init>(android.content.Context,android.os.Handler,java.lang.String,int,java.util.Map)>($r0, $r10, $r6, $i0, $r1)
SOURCE: 
	<net.hockeyapp.android.LoginActivity: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<net.hockeyapp.android.tasks.q: void <init>(android.content.Context,java.lang.String,android.os.Handler,java.lang.String)>($r0, $r1, $r4, $r2)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r10.<net.hockeyapp.android.tasks.r: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>($r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $z0)
SOURCE: 
	<net.hockeyapp.android.FeedbackActivity: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,android.os.Handler,boolean)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r9.<net.hockeyapp.android.views.e: void <init>(net.hockeyapp.android.views.PaintView)>($r0)
SOURCE: 
	<net.hockeyapp.android.views.PaintView: void <init>(android.content.Context,android.net.Uri,int,int)>
NO PATH TO SOURCE METHOD FOUND.
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+Word.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Yelp.apk
Soot started on Wed Apr 15 23:52:02 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.comscore.streaming.l: void <init>(com.comscore.streaming.StreamSenseVideoView,long,java.util.HashMap)>($r0, $l0, $r1)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <okhttp3.internal.http2.g$b: long a(com.yelp.android.ll.c,long)>
	6: <okhttp3.internal.http2.e: void a(int,long)>
	7: <io.fabric.sdk.android.services.concurrency.i: void execute(java.lang.Runnable)>
	8: <com.comscore.streaming.l: void run()>
	9: <com.comscore.streaming.StreamSenseVideoView: void a(com.comscore.streaming.StreamSenseVideoView,java.util.HashMap)>
	10: <com.comscore.streaming.StreamSenseVideoView: void a(java.util.HashMap)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.comscore.streaming.m: void <init>(com.comscore.streaming.StreamSenseVideoView,long)>($r0, $l0)
SOURCE: 
	<com.comscore.streaming.StreamSenseVideoView: void g()>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <okhttp3.internal.http2.g$b: long a(com.yelp.android.ll.c,long)>
	6: <okhttp3.internal.http2.e: void a(int,long)>
	7: <io.fabric.sdk.android.services.concurrency.i: void execute(java.lang.Runnable)>
	8: <com.comscore.streaming.l: void run()>
	9: <com.comscore.streaming.StreamSenseVideoView: void d(com.comscore.streaming.StreamSenseVideoView)>
	10: <com.comscore.streaming.StreamSenseVideoView: void g()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.ads.internal.overlay.q: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.ads.internal.overlay.y: void f()>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <com.yelp.android.ui.util.ap$b: long a(com.yelp.android.ll.c,long)>
	6: <com.facebook.network.connectionclass.c: void c()>
	7: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
	8: <android.support.v4.app.j: boolean o()>
	9: <android.support.v4.app.m: boolean i()>
	10: <android.support.v4.app.m: void j()>
	11: <android.support.v4.app.m: void h()>
	12: <android.support.v4.app.m: void b(android.support.v4.app.Fragment)>
	13: <android.support.v4.app.m: void a(android.support.v4.app.Fragment,int,int,int,boolean)>
	14: <android.support.v4.app.Fragment: void performResume()>
	15: <com.yelp.android.ui.activities.camera.VideoCaptureFragment: void onResume()>
	16: <com.google.android.gms.ads.internal.overlay.y: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
	17: <com.google.android.gms.ads.internal.overlay.y: void f()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.brightcove.player.video360.RenderThread: void <init>(com.brightcove.player.view.RenderView)>($r0)
SOURCE: 
	<com.brightcove.player.view.BrightcoveSurfaceView: void createRenderThread()>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <com.yelp.android.ui.util.ap$b: long a(com.yelp.android.ll.c,long)>
	6: <com.facebook.network.connectionclass.c: void c()>
	7: <com.brightcove.player.event.EventEmitterImpl$1: void handleMessage(android.os.Message)>
	8: <com.brightcove.player.event.EventEmitterImpl: void access$100(com.brightcove.player.event.EventEmitterImpl,com.brightcove.player.event.Event,java.lang.String)>
	9: <com.brightcove.player.event.EventEmitterImpl: void invokeListenersForEventType(com.brightcove.player.event.Event,java.lang.String)>
	10: <com.brightcove.player.display.VideoDisplayComponent$OnPlayListener: void processEvent(com.brightcove.player.event.Event)>
	11: <com.brightcove.player.display.VideoDisplayComponent: void openCurrentVideoSource()>
	12: <com.brightcove.player.display.VideoDisplayComponent: void openVideo(com.brightcove.player.model.Video,com.brightcove.player.model.Source)>
	13: <com.brightcove.player.view.BrightcoveSurfaceView: void setProjectionFormat(com.brightcove.player.model.Video$ProjectionFormat)>
	14: <com.brightcove.player.view.BrightcoveSurfaceView: void createRenderThread()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.yelp.android.ui.activities.mutatebiz.a: void <init>(android.content.Context,com.yelp.android.appdata.LocationService,com.yelp.android.ui.activities.mutatebiz.a$a)>($r0, $r8, $r1)
SOURCE: 
	<com.yelp.android.ui.activities.mutatebiz.ActivityAddBusiness: void i()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.yelp.android.ui.activities.mutatebiz.e: void <init>(com.yelp.android.ui.activities.mutatebiz.e$b,com.yelp.android.ui.activities.mutatebiz.e$a,android.view.View,android.view.View[])>($r3, $r0, null, $r4)
SOURCE: 
	<com.yelp.android.ui.activities.mutatebiz.ActivityChangeBusinessAttributes: void a(java.util.List)>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.lang.String getMessage()>
	3: <com.google.common.collect.TreeMultiset$2: boolean hasNext()>
	4: <com.google.common.collect.r: boolean b(java.lang.Object)>
	5: <com.yelp.android.fx.f$27$1: int compare(java.lang.Object,java.lang.Object)>
	6: <com.yelp.android.ez.a: java.lang.Object call(java.lang.Object)>
	7: <com.yelp.android.ez.a: rx.j a(rx.j)>
	8: <rx.internal.operators.OnSubscribeDetach$b: void a(rx.f)>
	9: <com.yelp.android.lz.c: void request(long)>
	10: <com.yelp.android.ui.activities.mutatebiz.ActivityEditBusiness$8: void a(java.lang.Object)>
	11: <com.yelp.android.ui.activities.mutatebiz.ActivityEditBusiness$8: void a(com.yelp.android.model.network.hw)>
	12: <com.yelp.android.ui.activities.mutatebiz.ActivityEditBusiness: void a(com.yelp.android.ui.activities.mutatebiz.ActivityEditBusiness,com.yelp.android.model.network.hw)>
	13: <com.yelp.android.ui.activities.mutatebiz.ActivityEditBusiness: void c(com.yelp.android.model.network.hw)>
	14: <com.yelp.android.ui.activities.mutatebiz.ActivityChangeBusinessAttributes: void a(java.util.List)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.yelp.android.ui.activities.camera.ViewTakePhotoOverlay$1: void <init>(com.yelp.android.ui.activities.camera.ViewTakePhotoOverlay)>($r0)
SOURCE: 
	<com.yelp.android.ui.activities.camera.ViewTakePhotoOverlay: void a(long,long)>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <okhttp3.internal.http2.g$b: long a(com.yelp.android.ll.c,long)>
	6: <okhttp3.internal.http2.e: void a(int,long)>
	7: <io.fabric.sdk.android.services.concurrency.i: void execute(java.lang.Runnable)>
	8: <com.yelp.android.ui.activities.camera.CameraWrangler$2: void run()>
	9: <com.yelp.android.ui.activities.camera.ViewTakePhotoOverlay: void a(com.yelp.android.ui.activities.camera.CameraWrangler)>
	10: <com.yelp.android.ui.activities.camera.ViewTakePhotoOverlay: void a(long,long)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.yelp.android.ui.activities.media.b: void <init>(android.content.Context,android.widget.ImageView,com.yelp.android.ui.util.MediaStoreUtil$MediaType)>($r0, $r3, $r1)
SOURCE: 
	<com.yelp.android.ui.activities.camera.ActivityTakePhoto: void k()>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <com.yelp.android.ui.util.ap$b: long a(com.yelp.android.ll.c,long)>
	6: <com.facebook.network.connectionclass.c: void c()>
	7: <android.support.v7.app.AlertController$b: void handleMessage(android.os.Message)>
	8: <com.facebook.login.DeviceAuthDialog$5: void onClick(android.content.DialogInterface,int)>
	9: <android.support.v7.app.l: void setContentView(android.view.View)>
	10: <android.support.v7.app.k: void a(android.view.View)>
	11: <android.support.v7.app.AppCompatActivity: void onContentChanged()>
	12: <com.yelp.android.ui.activities.camera.ActivityTakePhoto: void onSupportContentChanged()>
	13: <com.yelp.android.ui.activities.camera.ActivityTakePhoto: void k()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r8.<pl.droidsonroids.gif.GifTextureView$a: void <init>(pl.droidsonroids.gif.GifTextureView)>($r0)
SOURCE: 
	<pl.droidsonroids.gif.GifTextureView: void a(android.util.AttributeSet,int,int)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<pl.droidsonroids.gif.GifTextureView$a: void <init>(pl.droidsonroids.gif.GifTextureView)>($r0)
SOURCE: 
	<pl.droidsonroids.gif.GifTextureView: void setInputSource(pl.droidsonroids.gif.g)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.yelp.android.ui.activities.videotrim.VideoTrimTimelineView$1: void <init>(com.yelp.android.ui.activities.videotrim.VideoTrimTimelineView)>($r0)
SOURCE: 
	<com.yelp.android.ui.activities.videotrim.VideoTrimTimelineView: void a(com.yelp.android.ui.activities.videotrim.BetterMediaPlayer)>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <com.yelp.android.ui.util.ap$b: long a(com.yelp.android.ll.c,long)>
	6: <com.facebook.network.connectionclass.c: void c()>
	7: <com.brightcove.player.event.EventEmitterImpl$1: void handleMessage(android.os.Message)>
	8: <com.brightcove.player.event.EventEmitterImpl: void access$100(com.brightcove.player.event.EventEmitterImpl,com.brightcove.player.event.Event,java.lang.String)>
	9: <com.brightcove.player.event.EventEmitterImpl: void invokeListenersForEventType(com.brightcove.player.event.Event,java.lang.String)>
	10: <com.brightcove.player.view.BaseVideoView$3: void processEvent(com.brightcove.player.event.Event)>
	11: <com.brightcove.player.view.BaseVideoView: void onPrepared()>
	12: <com.yelp.android.ui.activities.videotrim.ActivityVideoTrim$3$1: void onPrepared(android.media.MediaPlayer)>
	13: <com.yelp.android.ui.activities.videotrim.VideoTrimTimelineView: void a(com.yelp.android.ui.activities.videotrim.BetterMediaPlayer)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.yelp.android.ui.activities.gallery.ActivityChooseFromGallery$5: void <init>(com.yelp.android.ui.activities.gallery.ActivityChooseFromGallery,java.lang.String,android.net.Uri)>($r0, $r3, $r1)
SOURCE: 
	<com.yelp.android.ui.activities.gallery.ActivityChooseFromGallery: void a(android.net.Uri)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r6.<com.yelp.android.ui.activities.settings.ActivityChangeSettings$a: void <init>(com.yelp.android.ui.activities.settings.ActivityChangeSettings,android.location.Geocoder,java.lang.String)>($r0, $r7, $r1)
SOURCE: 
	<com.yelp.android.ui.activities.settings.ActivityChangeSettings: void a(java.lang.String,java.lang.String,boolean,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.sun.jna.Native: void <clinit>()>
	1: <com.sun.jna.Native: void loadNativeDispatchLibrary()>
	2: <com.sun.jna.Native: void loadNativeDispatchLibraryFromClasspath()>
	3: <com.sun.jna.Native: java.io.File extractFromResourcePath(java.lang.String,java.lang.ClassLoader)>
	4: <com.yelp.android.ll.m$1: int read(byte[],int,int)>
	5: <com.yelp.android.ui.util.ap$b: long a(com.yelp.android.ll.c,long)>
	6: <com.facebook.network.connectionclass.c: void c()>
	7: <com.brightcove.player.event.EventEmitterImpl$1: void handleMessage(android.os.Message)>
	8: <com.brightcove.player.event.EventEmitterImpl: void access$100(com.brightcove.player.event.EventEmitterImpl,com.brightcove.player.event.Event,java.lang.String)>
	9: <com.brightcove.player.event.EventEmitterImpl: void invokeListenersForEventType(com.brightcove.player.event.Event,java.lang.String)>
	10: <com.brightcove.player.mediacontroller.buttons.CaptionsButtonController$3: void processEvent(com.brightcove.player.event.Event)>
	11: <com.yelp.android.ui.activities.settings.PreferenceScreenFragment: void onClick(android.view.View)>
	12: <com.yelp.android.ui.activities.settings.ActivityChangeSettings: void a(java.lang.String,java.lang.String,boolean,java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.yelp.android.ui.ActivityMonocle$b: void <init>(com.yelp.android.ui.ActivityMonocle,com.yelp.android.ui.ActivityMonocle$1)>($r0, null)
SOURCE: 
	<com.yelp.android.ui.ActivityMonocle: void c()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.yelp.android.ui.activities.ActivityRecents$a: void <init>(com.yelp.android.ui.activities.ActivityRecents)>($r0)
SOURCE: 
	<com.yelp.android.ui.activities.ActivityRecents: com.yelp.android.ui.activities.ActivityRecents$a d()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.yelp.android.ui.activities.addphoto.c: void <init>(android.content.Context,com.yelp.android.ui.activities.addphoto.c$a)>($r0, $r6)
SOURCE: 
	<com.yelp.android.ui.activities.addphoto.ActivityAddBusinessPhoto: void onCreate(android.os.Bundle)>


YouTube.apk
Soot started on Thu Apr 16 00:02:05 EDT 2020
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1042)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:996)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:80)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.util.ConcurrentModificationException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-android-jars+%2Fhome%2Fyuchi%2FAndroid%2FSdk%2Fplatforms+-process-dir+YouTube.apk%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3938MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.util.ConcurrentModificationException%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.checkForComodification%28ArrayList.java%3A1042%29%0A%09at+java.base%2Fjava.util.ArrayList%24Itr.next%28ArrayList.java%3A996%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork%28Instrument.java%3A80%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument%241.internalTransform%28Instrument.java%3A38%29%0A%09at+soot.SceneTransformer.transform%28SceneTransformer.java%3A36%29%0A%09at+soot.Transform.apply%28Transform.java%3A102%29%0A%09at+soot.ScenePack.internalApply%28ScenePack.java%3A35%29%0A%09at+soot.Pack.apply%28Pack.java%3A117%29%0A%09at+soot.PackManager.runWholeProgramPacks%28PackManager.java%3A612%29%0A%09at+soot.PackManager.runPacksNormally%28PackManager.java%3A495%29%0A%09at+soot.PackManager.runPacks%28PackManager.java%3A419%29%0A%09at+soot.Main.run%28Main.java%3A269%29%0A%09at+soot.Main.main%28Main.java%3A141%29%0A%09at+com.guitard0g.dataflow_analysis.Instrument.instrument%28Instrument.java%3A73%29%0A%09at+com.guitard0g.dataflow_analysis.App.main%28App.java%3A40%29%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!


Zedge.apk
Soot started on Thu Apr 16 00:03:10 EDT 2020
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r13.<apw: void <init>(com.facebook.ads.internal.view.e)>($r3)
SOURCE: 
	<com.facebook.ads.MediaView: void setNativeAd(com.facebook.ads.NativeAd)>
Soot has run out of the memory allocated to it by the Java VM.
To allocate more memory to Soot, use the -Xmx switch to Java.
For example (for 2GB): java -Xmx2g soot.Main ...
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at com.guitard0g.dataflow_analysis.App.getMethodPath(App.java:146)
	at com.guitard0g.dataflow_analysis.Instrument.caseInvokeAsyncTask(Instrument.java:121)
	at com.guitard0g.dataflow_analysis.Instrument$2.caseInvokeStmt(Instrument.java:94)
	at soot.jimple.internal.JInvokeStmt.apply(JInvokeStmt.java:91)
	at com.guitard0g.dataflow_analysis.Instrument.analyzeThreadWork(Instrument.java:92)
	at com.guitard0g.dataflow_analysis.Instrument$1.internalTransform(Instrument.java:38)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:612)
	at soot.PackManager.runPacksNormally(PackManager.java:495)
	at soot.PackManager.runPacks(PackManager.java:419)
	at soot.Main.run(Main.java:269)
	at soot.Main.main(Main.java:141)
	at com.guitard0g.dataflow_analysis.Instrument.instrument(Instrument.java:73)
	at com.guitard0g.dataflow_analysis.App.main(App.java:40)


Zillow.apk
Soot started on Thu Apr 16 00:05:07 EDT 2020
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$CountDownTimer: void <init>(com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView,com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView$1)>($r0, null)
SOURCE: 
	<com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView: void setNotification(com.apptentive.android.sdk.module.messagecenter.model.ApptentiveToastNotification)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager$1: void run()>
	12: <com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager: void access$000(com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager)>
	13: <com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager: void processNext()>
	14: <com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager: void showFloatingNotification(com.apptentive.android.sdk.module.messagecenter.model.ApptentiveToastNotification)>
	15: <com.apptentive.android.sdk.module.messagecenter.view.ApptentiveNotificationToastView: void setNotification(com.apptentive.android.sdk.module.messagecenter.model.ApptentiveToastNotification)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity$8: void <init>(com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity,android.content.Intent)>($r0, $r1)
SOURCE: 
	<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity: void makeZillowWebCall(android.content.Intent,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: void run()>
	12: <com.zillow.android.webservices.volley.PXVolleyRequest: void deliverError(com.android.volley.VolleyError)>
	13: <com.zillow.android.webservices.volley.GetCurrentUserInfoVolleyRequest: void zDeliverError(com.android.volley.VolleyError)>
	14: <com.zillow.android.signin.LoginManager$6: void onGetCurrentUserRequestFailure(com.zillow.android.webservices.volley.GetCurrentUserInfoVolleyRequest$GetCurrentUserAPIResponseCode,java.lang.String)>
	15: <com.zillow.android.signin.LoginManager: void notifyLoginEnd(int,int,com.zillow.android.webservices.RegistrationReason,android.app.Activity)>
	16: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity: void onLoginEnd(int,int,android.app.Activity)>
	17: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity: void makeZillowWebCall(android.content.Intent,java.lang.String)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity$7: void <init>(com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity,android.content.Intent)>($r0, $r1)
SOURCE: 
	<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivity: void trackEmailClick(android.content.Intent,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r2.<com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView$1: void <init>(com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView)>($r0)
SOURCE: 
	<com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView: void kickRenderOpWatchdog()>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView$2: void run()>
	12: <com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView: void access$100(com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView,java.lang.String)>
	13: <com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView: void launchRenderRelatedOperation(java.lang.String)>
	14: <com.zillow.android.re.ui.homedetailsscreen.HDPTemplateCacheableWebView: void kickRenderOpWatchdog()>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.google.android.gms.internal.zzamn: void <init>(android.content.Context)>($r5)
SOURCE: 
	<com.google.android.gms.internal.zzalr: void zzrj()>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask$GoogleMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r2, $z1, $r3, $r5, $z0)
SOURCE: 
	<com.zillow.android.maps.googlev2.GoogleMapV2View: void addMappableItemToMap(com.zillow.android.maps.mapitem.MappableItem,boolean)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.maps.BaseMapFragment$9$1: void run()>
	12: <com.zillow.android.maps.BaseMapFragment: void dismissInfoView(boolean)>
	13: <com.zillow.android.maps.BaseMapFragment: void dismissInfoView(boolean,boolean)>
	14: <com.zillow.android.maps.googlev2.GoogleMapV2View: void clearMappableItemSelection()>
	15: <com.zillow.android.maps.googlev2.GoogleMapV2View: void addMappableItemToMap(com.zillow.android.maps.mapitem.MappableItem,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask$GoogleMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r3, $z0, $r2, $r4, $z1)
SOURCE: 
	<com.zillow.android.maps.googlev2.GoogleMapV2View: void refreshMappableItemOverlay()>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <android.support.v4.app.FragmentManagerImpl$2$1: void run()>
	12: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
	13: <android.support.v4.app.Fragment: void performResume()>
	14: <com.zillow.android.maps.BaseMapFragment: void onResume()>
	15: <com.zillow.android.maps.googlev2.GoogleMapV2View: void onMapFragmentResumed()>
	16: <com.zillow.android.maps.googlev2.GoogleMapV2View: void refreshMappableItemOverlay()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r5.<com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.googlev2.GoogleMarkerOptionsCreateTask$GoogleMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r1, $z1, $r6, $r13, $z0)
SOURCE: 
	<com.zillow.android.maps.googlev2.GoogleMapV2View: void updateMappableItemOverlay(com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItem)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.re.ui.savedsearchesscreen.SavedSearchMapActivity$3: void run()>
	12: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment: void removeHomesFromMap(java.util.List,boolean,com.zillow.android.maps.mapitem.MappableItemContainer)>
	13: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment: void updateMappableItemsOverlay(com.zillow.android.maps.MappableItemOverlayUpdater)>
	14: <com.zillow.android.maps.BaseMapFragment: void updateMappableItemsOverlay(com.zillow.android.maps.MappableItemOverlayUpdater)>
	15: <com.zillow.android.maps.googlev2.GoogleMapV2View: void updateMappableItemOverlay(com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItem)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask$AmazonMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r2, $z1, $r3, $r5, $z0)
SOURCE: 
	<com.zillow.android.maps.amazon.AmazonMapV2View: void addMappableItemToMap(com.zillow.android.maps.mapitem.MappableItem,boolean)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.maps.BaseMapFragment$9$1: void run()>
	12: <com.zillow.android.maps.BaseMapFragment: void dismissInfoView(boolean)>
	13: <com.zillow.android.maps.BaseMapFragment: void dismissInfoView(boolean,boolean)>
	14: <com.zillow.android.maps.amazon.AmazonMapV2View: void clearMappableItemSelection()>
	15: <com.zillow.android.maps.amazon.AmazonMapV2View: void addMappableItemToMap(com.zillow.android.maps.mapitem.MappableItem,boolean)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask$AmazonMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r2, $z0, null, $r3, $z1)
SOURCE: 
	<com.zillow.android.maps.amazon.AmazonMapV2View: void refreshMappableItemOverlay()>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <android.support.v4.app.FragmentManagerImpl$2$1: void run()>
	12: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
	13: <android.support.v4.app.Fragment: void performResume()>
	14: <com.zillow.android.maps.BaseMapFragment: void onResume()>
	15: <com.zillow.android.maps.amazon.AmazonMapV2View: void onMapFragmentResumed()>
	16: <com.zillow.android.maps.amazon.AmazonMapV2View: void refreshMappableItemOverlay()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r4.<com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask: void <init>(com.zillow.android.maps.amazon.AmazonMarkerOptionsCreateTask$AmazonMarkerOptionsCreateTaskListener,com.zillow.android.maps.mapitem.MappableItemContainer,boolean,java.lang.Object,android.content.Context,boolean)>($r0, $r6, $z0, $r5, $r9, $z1)
SOURCE: 
	<com.zillow.android.maps.amazon.AmazonMapV2View: void updateMappableItemOverlay(com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItem)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.re.ui.savedsearchesscreen.SavedSearchMapActivity$3: void run()>
	12: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment: void removeHomesFromMap(java.util.List,boolean,com.zillow.android.maps.mapitem.MappableItemContainer)>
	13: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment: void updateMappableItemsOverlay(com.zillow.android.maps.MappableItemOverlayUpdater)>
	14: <com.zillow.android.maps.BaseMapFragment: void updateMappableItemsOverlay(com.zillow.android.maps.MappableItemOverlayUpdater)>
	15: <com.zillow.android.maps.amazon.AmazonMapV2View: void updateMappableItemOverlay(com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItemContainer,com.zillow.android.maps.mapitem.MappableItem)>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2$14: void <init>(com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2,android.content.Intent)>($r0, $r1)
SOURCE: 
	<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2: void makeZillowWebCall(android.content.Intent,java.lang.String)>
NO PATH TO SOURCE METHOD FOUND.
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2$13: void <init>(com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2,android.content.Intent)>($r0, $r1)
SOURCE: 
	<com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2: void trackEmailClick(android.content.Intent,java.lang.String)>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <android.arch.lifecycle.LiveData$2: void run()>
	12: <android.arch.lifecycle.LiveData: void setValue(java.lang.Object)>
	13: <android.arch.lifecycle.LiveData: void dispatchingValue(android.arch.lifecycle.LiveData$LifecycleBoundObserver)>
	14: <android.arch.lifecycle.LiveData: void considerNotify(android.arch.lifecycle.LiveData$LifecycleBoundObserver)>
	15: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2$2: void onChanged(java.lang.Object)>
	16: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2$2: void onChanged(java.lang.Boolean)>
	17: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2: void access$200(com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2,android.content.Intent,com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment2)>
	18: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2: void processIntent(android.content.Intent,com.zillow.android.re.ui.homesmapscreen.RealEstateMapFragment2)>
	19: <com.zillow.android.re.ui.homesmapscreen.RealEstateMapActivityV2: void trackEmailClick(android.content.Intent,java.lang.String)>
==========================(ThreadTask/TimerTask)==============================
ThreadTask/TimerTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r3.<com.zillow.android.mortgage.ui.shopping.RateQuotesActivity$9: void <init>(com.zillow.android.mortgage.ui.shopping.RateQuotesActivity)>($r0)
SOURCE: 
	<com.zillow.android.mortgage.ui.shopping.RateQuotesActivity: void fetchLoanQuotes()>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <com.zillow.android.mortgage.ui.shopping.RateQuotesActivity$22: void run()>
	12: <com.zillow.android.mortgage.ui.shopping.RateQuotesActivity: void fetchLoanQuotes()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r1.<com.zillow.android.mortgage.ui.longform.LocationFetchAsyncTask: void <init>(com.zillow.android.mortgage.ui.longform.LocationFetchAsyncTask$LocationListner,android.app.Activity)>($r0, $r4)
SOURCE: 
	<com.zillow.android.mortgage.ui.ZipcodeTextAndLabel: void fetchZipcode()>
PATH TO SOURCE METHOD: 
	0: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlHelpers: void main(java.lang.String[])>
	1: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: void <init>(java.lang.String,java.util.List)>
	2: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: java.util.List extractImages(org.w3c.dom.Document)>
	3: <com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl: byte[] streamToByteArray(java.io.InputStream)>
	4: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[])>
	5: <com.amazonaws.services.s3.model.S3ObjectInputStream: int read(byte[],int,int)>
	6: <com.amazonaws.internal.SdkFilterInputStream: int read(byte[],int,int)>
	7: <okio.RealBufferedSource$1: int read(byte[],int,int)>
	8: <okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>
	9: <okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>
	10: <io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor: void execute(java.lang.Runnable)>
	11: <android.support.v4.app.FragmentManagerImpl$2$1: void run()>
	12: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
	13: <android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
	14: <com.zillow.android.mortgage.ui.shopping.ShopPurchaseLoanFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
	15: <com.zillow.android.mortgage.ui.ZipcodeTextAndLabel: void fetchZipcode()>
==========================(AsyncTask)==============================
AsyncTask DECLARED INSIDE UI OBJECT (POTENTIAL LEAK): 
Bytecode instruction: 
	specialinvoke $r7.<com.zillow.android.video.upload.util.VideoFrameRetrieverTask: void <init>(android.widget.ImageView,java.lang.String,com.zillow.android.video.upload.util.VideoFrameRetrieverTask$VideoFrameRetrieverTaskListener,long)>($r1, $r4, null, 1L)
SOURCE: 
	<com.zillow.android.video.upload.ui.VideoReviewSubmissionActivity: void setCoverPhoto(android.widget.ImageView)>
NO PATH TO SOURCE METHOD FOUND.
Soot finished on Thu Apr 16 00:10:44 EDT 2020
Soot has run for 5 min. 36 sec.
==========================(Potential Leaks)==============================


